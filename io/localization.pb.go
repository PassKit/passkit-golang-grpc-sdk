//*
// Localization
//
// Translate your pass contents into multiple languages. Multi-language support.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/common/localization.proto

package io

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a list of supported languages.
type LanguageCode int32

const (
	// English
	LanguageCode_EN LanguageCode = 0
	// (Arabic) العربية
	LanguageCode_AR LanguageCode = 4
	// 简体中文 (Chinese)
	LanguageCode_ZH_HANS LanguageCode = 8
	// 繁體中文 (Traditional Chinese)
	LanguageCode_ZH_HANT LanguageCode = 12
	// 香港中文 (Cantonese)
	LanguageCode_ZH_HK LanguageCode = 16
	// Català (Catalan)
	LanguageCode_CA LanguageCode = 20
	// Hrvatski (Croatian)
	LanguageCode_HR LanguageCode = 24
	// Čeština (Czech)
	LanguageCode_CS LanguageCode = 28
	// Dansk (Danish)
	LanguageCode_DA LanguageCode = 32
	// Deutsch (German)
	LanguageCode_DE LanguageCode = 36
	// English (Australia)
	LanguageCode_EN_AU LanguageCode = 40
	// English (British)
	LanguageCode_EN_GB LanguageCode = 44
	// English (Canada)
	LanguageCode_EN_CA LanguageCode = 48
	// English (India)
	LanguageCode_EN_US LanguageCode = 52
	// English (United States)
	LanguageCode_EN_IN LanguageCode = 56
	// Español (Spanish)
	LanguageCode_ES LanguageCode = 60
	// Español (Latin America)
	LanguageCode_ES_419 LanguageCode = 64
	// Suomi (Finnish)
	LanguageCode_FI LanguageCode = 68
	// Français (French)
	LanguageCode_FR LanguageCode = 72
	// Français (Canada)
	LanguageCode_FR_CA LanguageCode = 76
	// Ελληνικά (Greek)
	LanguageCode_EL LanguageCode = 80
	// (Hebrew) עברית
	LanguageCode_HE LanguageCode = 84
	// हिन्दी (Hindi)
	LanguageCode_HI LanguageCode = 88
	// Magyar (Hungarian)
	LanguageCode_HU LanguageCode = 92
	// Bahasa Indonesia (Indonesian)
	LanguageCode_ID LanguageCode = 96
	// Italiano (Italian)
	LanguageCode_IT LanguageCode = 100
	// 日本語 (Japanese)
	LanguageCode_JA LanguageCode = 104
	// 한국어 (Korean)
	LanguageCode_KO LanguageCode = 108
	// Bahasa Melayu (Malay)
	LanguageCode_MS LanguageCode = 112
	// Malti (Maltese)
	LanguageCode_MT LanguageCode = 116
	// Nederlands (Dutch)
	LanguageCode_NL LanguageCode = 120
	// Norsk Bokmål (Norwegian)
	LanguageCode_NB LanguageCode = 124
	// Polski (Polish)
	LanguageCode_PL LanguageCode = 128
	// Português de Portugal (Portuguese)
	LanguageCode_PT LanguageCode = 132
	// Português (Brazilian Portuguese)
	LanguageCode_PT_BR LanguageCode = 136
	// Română (Romanian)
	LanguageCode_RO LanguageCode = 140
	// Русский (Russian)
	LanguageCode_RU LanguageCode = 144
	// Slovenčina (Slovakian)
	LanguageCode_SK LanguageCode = 148
	// Svenska (Swedish)
	LanguageCode_SV LanguageCode = 152
	// ภาษาไทย (Thai)
	LanguageCode_TH LanguageCode = 156
	// Türkçe (Turkish)
	LanguageCode_TR LanguageCode = 160
	// Українська (Ukrainian)
	LanguageCode_UK LanguageCode = 164
	// Tiếng Việt (Vietnamese)
	LanguageCode_VI LanguageCode = 168
)

// Enum value maps for LanguageCode.
var (
	LanguageCode_name = map[int32]string{
		0:   "EN",
		4:   "AR",
		8:   "ZH_HANS",
		12:  "ZH_HANT",
		16:  "ZH_HK",
		20:  "CA",
		24:  "HR",
		28:  "CS",
		32:  "DA",
		36:  "DE",
		40:  "EN_AU",
		44:  "EN_GB",
		48:  "EN_CA",
		52:  "EN_US",
		56:  "EN_IN",
		60:  "ES",
		64:  "ES_419",
		68:  "FI",
		72:  "FR",
		76:  "FR_CA",
		80:  "EL",
		84:  "HE",
		88:  "HI",
		92:  "HU",
		96:  "ID",
		100: "IT",
		104: "JA",
		108: "KO",
		112: "MS",
		116: "MT",
		120: "NL",
		124: "NB",
		128: "PL",
		132: "PT",
		136: "PT_BR",
		140: "RO",
		144: "RU",
		148: "SK",
		152: "SV",
		156: "TH",
		160: "TR",
		164: "UK",
		168: "VI",
	}
	LanguageCode_value = map[string]int32{
		"EN":      0,
		"AR":      4,
		"ZH_HANS": 8,
		"ZH_HANT": 12,
		"ZH_HK":   16,
		"CA":      20,
		"HR":      24,
		"CS":      28,
		"DA":      32,
		"DE":      36,
		"EN_AU":   40,
		"EN_GB":   44,
		"EN_CA":   48,
		"EN_US":   52,
		"EN_IN":   56,
		"ES":      60,
		"ES_419":  64,
		"FI":      68,
		"FR":      72,
		"FR_CA":   76,
		"EL":      80,
		"HE":      84,
		"HI":      88,
		"HU":      92,
		"ID":      96,
		"IT":      100,
		"JA":      104,
		"KO":      108,
		"MS":      112,
		"MT":      116,
		"NL":      120,
		"NB":      124,
		"PL":      128,
		"PT":      132,
		"PT_BR":   136,
		"RO":      140,
		"RU":      144,
		"SK":      148,
		"SV":      152,
		"TH":      156,
		"TR":      160,
		"UK":      164,
		"VI":      168,
	}
)

func (x LanguageCode) Enum() *LanguageCode {
	p := new(LanguageCode)
	*p = x
	return p
}

func (x LanguageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LanguageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_localization_proto_enumTypes[0].Descriptor()
}

func (LanguageCode) Type() protoreflect.EnumType {
	return &file_io_common_localization_proto_enumTypes[0]
}

func (x LanguageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LanguageCode.Descriptor instead.
func (LanguageCode) EnumDescriptor() ([]byte, []int) {
	return file_io_common_localization_proto_rawDescGZIP(), []int{0}
}

// Localized strings are optionally used to provide translated values for each of supported language.
type LocalizedString struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Translations key is a valid LanguageCode. The value represents the translated string.
	// @tag: validateGeneric:"languageCode"
	Translations  map[string]string `protobuf:"bytes,1,rep,name=translations,proto3" json:"translations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validateGeneric:"languageCode"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalizedString) Reset() {
	*x = LocalizedString{}
	mi := &file_io_common_localization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalizedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedString) ProtoMessage() {}

func (x *LocalizedString) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_localization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedString.ProtoReflect.Descriptor instead.
func (*LocalizedString) Descriptor() ([]byte, []int) {
	return file_io_common_localization_proto_rawDescGZIP(), []int{0}
}

func (x *LocalizedString) GetTranslations() map[string]string {
	if x != nil {
		return x.Translations
	}
	return nil
}

var File_io_common_localization_proto protoreflect.FileDescriptor

var file_io_common_localization_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x69, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x97, 0x03, 0x0a, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x41,
	0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x5a, 0x48, 0x5f, 0x48, 0x41, 0x4e, 0x53, 0x10, 0x08,
	0x12, 0x0b, 0x0a, 0x07, 0x5a, 0x48, 0x5f, 0x48, 0x41, 0x4e, 0x54, 0x10, 0x0c, 0x12, 0x09, 0x0a,
	0x05, 0x5a, 0x48, 0x5f, 0x48, 0x4b, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x41, 0x10, 0x14,
	0x12, 0x06, 0x0a, 0x02, 0x48, 0x52, 0x10, 0x18, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x53, 0x10, 0x1c,
	0x12, 0x06, 0x0a, 0x02, 0x44, 0x41, 0x10, 0x20, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x45, 0x10, 0x24,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x41, 0x55, 0x10, 0x28, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x4e, 0x5f, 0x47, 0x42, 0x10, 0x2c, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x10,
	0x30, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x5f, 0x55, 0x53, 0x10, 0x34, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x10, 0x38, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x53, 0x10, 0x3c, 0x12,
	0x0a, 0x0a, 0x06, 0x45, 0x53, 0x5f, 0x34, 0x31, 0x39, 0x10, 0x40, 0x12, 0x06, 0x0a, 0x02, 0x46,
	0x49, 0x10, 0x44, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x52, 0x10, 0x48, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x52, 0x5f, 0x43, 0x41, 0x10, 0x4c, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x4c, 0x10, 0x50, 0x12, 0x06,
	0x0a, 0x02, 0x48, 0x45, 0x10, 0x54, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x49, 0x10, 0x58, 0x12, 0x06,
	0x0a, 0x02, 0x48, 0x55, 0x10, 0x5c, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x60, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x54, 0x10, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x41, 0x10, 0x68, 0x12, 0x06,
	0x0a, 0x02, 0x4b, 0x4f, 0x10, 0x6c, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x53, 0x10, 0x70, 0x12, 0x06,
	0x0a, 0x02, 0x4d, 0x54, 0x10, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4c, 0x10, 0x78, 0x12, 0x06,
	0x0a, 0x02, 0x4e, 0x42, 0x10, 0x7c, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4c, 0x10, 0x80, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x50, 0x54, 0x10, 0x84, 0x01, 0x12, 0x0a, 0x0a, 0x05, 0x50, 0x54, 0x5f, 0x42,
	0x52, 0x10, 0x88, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x4f, 0x10, 0x8c, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x52, 0x55, 0x10, 0x90, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4b, 0x10, 0x94, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x53, 0x56, 0x10, 0x98, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x48, 0x10, 0x9c,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x52, 0x10, 0xa0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x4b,
	0x10, 0xa4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x49, 0x10, 0xa8, 0x01, 0x42, 0x47, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5a, 0x24, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x64, 0x6b,
	0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6f, 0xaa, 0x02, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x4b, 0x69, 0x74,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_io_common_localization_proto_rawDescOnce sync.Once
	file_io_common_localization_proto_rawDescData []byte
)

func file_io_common_localization_proto_rawDescGZIP() []byte {
	file_io_common_localization_proto_rawDescOnce.Do(func() {
		file_io_common_localization_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_common_localization_proto_rawDesc), len(file_io_common_localization_proto_rawDesc)))
	})
	return file_io_common_localization_proto_rawDescData
}

var file_io_common_localization_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_io_common_localization_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_io_common_localization_proto_goTypes = []any{
	(LanguageCode)(0),       // 0: io.LanguageCode
	(*LocalizedString)(nil), // 1: io.LocalizedString
	nil,                     // 2: io.LocalizedString.TranslationsEntry
}
var file_io_common_localization_proto_depIdxs = []int32{
	2, // 0: io.LocalizedString.translations:type_name -> io.LocalizedString.TranslationsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_io_common_localization_proto_init() }
func file_io_common_localization_proto_init() {
	if File_io_common_localization_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_common_localization_proto_rawDesc), len(file_io_common_localization_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_common_localization_proto_goTypes,
		DependencyIndexes: file_io_common_localization_proto_depIdxs,
		EnumInfos:         file_io_common_localization_proto_enumTypes,
		MessageInfos:      file_io_common_localization_proto_msgTypes,
	}.Build()
	File_io_common_localization_proto = out.File
	file_io_common_localization_proto_goTypes = nil
	file_io_common_localization_proto_depIdxs = nil
}
