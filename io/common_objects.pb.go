//*
// Common
//
// Common objects used across PassKit protocols.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/common/common_objects.proto

package io

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List position is used to denote behavior for list items that may already have been populated bay a parent object.  Default is to append the item to the existing list.
type ListPosition int32

const (
	ListPosition_APPEND  ListPosition = 0
	ListPosition_PREPEND ListPosition = 1
	ListPosition_REPLACE ListPosition = 2
)

// Enum value maps for ListPosition.
var (
	ListPosition_name = map[int32]string{
		0: "APPEND",
		1: "PREPEND",
		2: "REPLACE",
	}
	ListPosition_value = map[string]int32{
		"APPEND":  0,
		"PREPEND": 1,
		"REPLACE": 2,
	}
)

func (x ListPosition) Enum() *ListPosition {
	p := new(ListPosition)
	*p = x
	return p
}

func (x ListPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_common_objects_proto_enumTypes[0].Descriptor()
}

func (ListPosition) Type() protoreflect.EnumType {
	return &file_io_common_common_objects_proto_enumTypes[0]
}

func (x ListPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListPosition.Descriptor instead.
func (ListPosition) EnumDescriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{0}
}

type Toggle int32

const (
	Toggle_DO_NOT_USE Toggle = 0
	Toggle_ON         Toggle = 1
	Toggle_OFF        Toggle = 2
)

// Enum value maps for Toggle.
var (
	Toggle_name = map[int32]string{
		0: "DO_NOT_USE",
		1: "ON",
		2: "OFF",
	}
	Toggle_value = map[string]int32{
		"DO_NOT_USE": 0,
		"ON":         1,
		"OFF":        2,
	}
)

func (x Toggle) Enum() *Toggle {
	p := new(Toggle)
	*p = x
	return p
}

func (x Toggle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Toggle) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_common_objects_proto_enumTypes[1].Descriptor()
}

func (Toggle) Type() protoreflect.EnumType {
	return &file_io_common_common_objects_proto_enumTypes[1]
}

func (x Toggle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Toggle.Descriptor instead.
func (Toggle) EnumDescriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{1}
}

type TimeState int32

const (
	TimeState_TIME_STATE_NONE      TimeState = 0
	TimeState_TIME_STATE_CURRENT   TimeState = 1
	TimeState_TIME_STATE_PREVIOUS  TimeState = 2
	TimeState_TIME_STATE_FOLLOWING TimeState = 3
)

// Enum value maps for TimeState.
var (
	TimeState_name = map[int32]string{
		0: "TIME_STATE_NONE",
		1: "TIME_STATE_CURRENT",
		2: "TIME_STATE_PREVIOUS",
		3: "TIME_STATE_FOLLOWING",
	}
	TimeState_value = map[string]int32{
		"TIME_STATE_NONE":      0,
		"TIME_STATE_CURRENT":   1,
		"TIME_STATE_PREVIOUS":  2,
		"TIME_STATE_FOLLOWING": 3,
	}
)

func (x TimeState) Enum() *TimeState {
	p := new(TimeState)
	*p = x
	return p
}

func (x TimeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeState) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_common_objects_proto_enumTypes[2].Descriptor()
}

func (TimeState) Type() protoreflect.EnumType {
	return &file_io_common_common_objects_proto_enumTypes[2]
}

func (x TimeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeState.Descriptor instead.
func (TimeState) EnumDescriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{2}
}

// PassBundleFormat is used to specify which format(s) to provide the pass content.
type PassBundleFormat int32

const (
	// The URL to the web landing page.
	PassBundleFormat_PASS_URL PassBundleFormat = 0
	// A URL that can be used in an Android app or email. Note that this is not recommended for web use.
	PassBundleFormat_GOOGLE_URL PassBundleFormat = 2
	// The Base64 encoded bytes of the Apple Wallet pass bundle.
	PassBundleFormat_APPLE_PASS_BUNDLE PassBundleFormat = 8
	// The URL to a landing page for multiple passes containing a common identifier.
	PassBundleFormat_MULTI_LINK PassBundleFormat = 16
)

// Enum value maps for PassBundleFormat.
var (
	PassBundleFormat_name = map[int32]string{
		0:  "PASS_URL",
		2:  "GOOGLE_URL",
		8:  "APPLE_PASS_BUNDLE",
		16: "MULTI_LINK",
	}
	PassBundleFormat_value = map[string]int32{
		"PASS_URL":          0,
		"GOOGLE_URL":        2,
		"APPLE_PASS_BUNDLE": 8,
		"MULTI_LINK":        16,
	}
)

func (x PassBundleFormat) Enum() *PassBundleFormat {
	p := new(PassBundleFormat)
	*p = x
	return p
}

func (x PassBundleFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PassBundleFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_common_objects_proto_enumTypes[3].Descriptor()
}

func (PassBundleFormat) Type() protoreflect.EnumType {
	return &file_io_common_common_objects_proto_enumTypes[3]
}

func (x PassBundleFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PassBundleFormat.Descriptor instead.
func (PassBundleFormat) EnumDescriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{3}
}

// UsageType is used to indicate where a field or link is used / rendered
type UsageType int32

const (
	UsageType_NO_USAGE UsageType = 0
	// Rendered on Apple Wallet
	UsageType_USAGE_APPLE_WALLET UsageType = 1
	// Rendered on Google Pay
	UsageType_USAGE_GOOGLE_PAY UsageType = 2
	// Rendered on data collection page
	UsageType_USAGE_DATA_COLLECTION_PAGE UsageType = 4
)

// Enum value maps for UsageType.
var (
	UsageType_name = map[int32]string{
		0: "NO_USAGE",
		1: "USAGE_APPLE_WALLET",
		2: "USAGE_GOOGLE_PAY",
		4: "USAGE_DATA_COLLECTION_PAGE",
	}
	UsageType_value = map[string]int32{
		"NO_USAGE":                   0,
		"USAGE_APPLE_WALLET":         1,
		"USAGE_GOOGLE_PAY":           2,
		"USAGE_DATA_COLLECTION_PAGE": 4,
	}
)

func (x UsageType) Enum() *UsageType {
	p := new(UsageType)
	*p = x
	return p
}

func (x UsageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageType) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_common_objects_proto_enumTypes[4].Descriptor()
}

func (UsageType) Type() protoreflect.EnumType {
	return &file_io_common_common_objects_proto_enumTypes[4]
}

func (x UsageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageType.Descriptor instead.
func (UsageType) EnumDescriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{4}
}

// An Id is used to access an unique object or record. Eg. a PassKit pass id.
type Id struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier to an object or record.
	// @tag: validateGeneric:"required"
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_io_common_common_objects_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{0}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Ids struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of unique identifiers for objects or records.
	Id            []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ids) Reset() {
	*x = Ids{}
	mi := &file_io_common_common_objects_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{1}
}

func (x *Ids) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type Url struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Url) Reset() {
	*x = Url{}
	mi := &file_io_common_common_objects_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{2}
}

func (x *Url) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Url) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Count struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // set as int32 so JSON renders as an integer
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Count) Reset() {
	*x = Count{}
	mi := &file_io_common_common_objects_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{3}
}

func (x *Count) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FileBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileBytes     []byte                 `protobuf:"bytes,1,opt,name=fileBytes,proto3" json:"fileBytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileBytes) Reset() {
	*x = FileBytes{}
	mi := &file_io_common_common_objects_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBytes) ProtoMessage() {}

func (x *FileBytes) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBytes.ProtoReflect.Descriptor instead.
func (*FileBytes) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{4}
}

func (x *FileBytes) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

type Boolean struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: json:"response"
	Response      bool `protobuf:"varint,1,opt,name=response,proto3" json:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	mi := &file_io_common_common_objects_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{5}
}

func (x *Boolean) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

// Repeated field of dynamically typed values (including string, bool, option, syntax).
type Strings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      []string               `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Strings) Reset() {
	*x = Strings{}
	mi := &file_io_common_common_objects_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Strings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strings) ProtoMessage() {}

func (x *Strings) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strings.ProtoReflect.Descriptor instead.
func (*Strings) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{6}
}

func (x *Strings) GetResponse() []string {
	if x != nil {
		return x.Response
	}
	return nil
}

// Payload object used for validating TOTP and encrypted barcode strings.
type Payload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateGeneric:"required"
	Payload       string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty" validateGeneric:"required"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_io_common_common_objects_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{7}
}

func (x *Payload) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// A fixed date without timezone information.
type Date struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Year.
	// @tag: validateGeneric:"max=9999"
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty" validateGeneric:"max=9999"`
	// Month.
	// @tag: validateGeneric:"min=1,max=12"
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty" validateGeneric:"min=1,max=12"`
	// Day.
	// @tag: validateGeneric:"min=1,max=31"
	Day           int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty" validateGeneric:"min=1,max=31"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Date) Reset() {
	*x = Date{}
	mi := &file_io_common_common_objects_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{8}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

// A fixed time without timezone information.
type Time struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hour.
	// @tag: validateGeneric:"min=0,max=23"
	Hour int32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty" validateGeneric:"min=0,max=23"`
	// Minute.
	// @tag: validateGeneric:"min=0,max=60"
	Minute int32 `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty" validateGeneric:"min=0,max=60"`
	// Second.
	// @tag: validateGeneric:"min=0,max=60"
	Second        int32 `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty" validateGeneric:"min=0,max=60"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Time) Reset() {
	*x = Time{}
	mi := &file_io_common_common_objects_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{9}
}

func (x *Time) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *Time) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *Time) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

// Local Date are specified in ISO 8601 format date without a time. The date should be local to where the pass will be at the time of use.
type LocalDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ISO 8601 format date without a time. E.g. 2019-08-07.
	DateTime      string `protobuf:"bytes,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalDate) Reset() {
	*x = LocalDate{}
	mi := &file_io_common_common_objects_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalDate) ProtoMessage() {}

func (x *LocalDate) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalDate.ProtoReflect.Descriptor instead.
func (*LocalDate) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{10}
}

func (x *LocalDate) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

// Local Date Times are specified in ISO 8601 extended format date/time without a timezone offset. The time should be local to where the pass will be at the time of use.
type LocalDateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ISO 8601 extended format date/time without an offset E.g. 2019-08-07T18:00:00. Time can optionally be stated to millisecond precision. E.g. 2019-08-07T18:00:00.123.
	DateTime      string `protobuf:"bytes,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalDateTime) Reset() {
	*x = LocalDateTime{}
	mi := &file_io_common_common_objects_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalDateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalDateTime) ProtoMessage() {}

func (x *LocalDateTime) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalDateTime.ProtoReflect.Descriptor instead.
func (*LocalDateTime) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{11}
}

func (x *LocalDateTime) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

// A Pass Bundle contains a landing page URL and/or a compiled pass in multiple formats
type PassBundle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PassKit Id that uniquely references the pass.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The URL to the web landing page.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// A URL that can be used in an Android app or email. Note that this is not recommended for web use.
	GooglePayURL string `protobuf:"bytes,5,opt,name=googlePayURL,proto3" json:"googlePayURL,omitempty"`
	// The Base64 encoded bytes of the Apple Wallet pass.
	ApplePassBytes []byte `protobuf:"bytes,6,opt,name=applePassBytes,proto3" json:"applePassBytes,omitempty"`
	// A URL for multiple passes, linked by a common index.
	MultiplePassesURL string `protobuf:"bytes,7,opt,name=multiplePassesURL,proto3" json:"multiplePassesURL,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PassBundle) Reset() {
	*x = PassBundle{}
	mi := &file_io_common_common_objects_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassBundle) ProtoMessage() {}

func (x *PassBundle) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassBundle.ProtoReflect.Descriptor instead.
func (*PassBundle) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{12}
}

func (x *PassBundle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PassBundle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PassBundle) GetGooglePayURL() string {
	if x != nil {
		return x.GooglePayURL
	}
	return ""
}

func (x *PassBundle) GetApplePassBytes() []byte {
	if x != nil {
		return x.ApplePassBytes
	}
	return nil
}

func (x *PassBundle) GetMultiplePassesURL() string {
	if x != nil {
		return x.MultiplePassesURL
	}
	return ""
}

type PassBundles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Passes        []*PassBundle          `protobuf:"bytes,1,rep,name=passes,proto3" json:"passes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassBundles) Reset() {
	*x = PassBundles{}
	mi := &file_io_common_common_objects_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassBundles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassBundles) ProtoMessage() {}

func (x *PassBundles) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassBundles.ProtoReflect.Descriptor instead.
func (*PassBundles) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{13}
}

func (x *PassBundles) GetPasses() []*PassBundle {
	if x != nil {
		return x.Passes
	}
	return nil
}

type PassBundleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PassKit pass id that uniquely identifies the pass.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The format(s) of the pass required.  If omitted, the URL to the web landing page will be returned.
	Format        []PassBundleFormat `protobuf:"varint,2,rep,packed,name=format,proto3,enum=io.PassBundleFormat" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassBundleRequest) Reset() {
	*x = PassBundleRequest{}
	mi := &file_io_common_common_objects_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassBundleRequest) ProtoMessage() {}

func (x *PassBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassBundleRequest.ProtoReflect.Descriptor instead.
func (*PassBundleRequest) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{14}
}

func (x *PassBundleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PassBundleRequest) GetFormat() []PassBundleFormat {
	if x != nil {
		return x.Format
	}
	return nil
}

// [DEPRECATED: OR operator is not supported] Filter and list records.
type ListRequestDeprecated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	ClassId string `protobuf:"bytes,1,opt,name=classId,proto3" json:"classId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Protocol PassProtocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Pagination    *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequestDeprecated) Reset() {
	*x = ListRequestDeprecated{}
	mi := &file_io_common_common_objects_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequestDeprecated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequestDeprecated) ProtoMessage() {}

func (x *ListRequestDeprecated) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequestDeprecated.ProtoReflect.Descriptor instead.
func (*ListRequestDeprecated) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{15}
}

func (x *ListRequestDeprecated) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *ListRequestDeprecated) GetProtocol() PassProtocol {
	if x != nil {
		return x.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (x *ListRequestDeprecated) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	ClassId string `protobuf:"bytes,1,opt,name=classId,proto3" json:"classId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Protocol PassProtocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Filters       *Filters `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_io_common_common_objects_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{16}
}

func (x *ListRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *ListRequest) GetProtocol() PassProtocol {
	if x != nil {
		return x.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (x *ListRequest) GetFilters() *Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type BulkPassActionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	ClassId string `protobuf:"bytes,1,opt,name=classId,proto3" json:"classId,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	Protocol PassProtocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	// @tag: validateGeneric:"required" validateCreate:"required" validateUpdate:"required"
	FilterGroups  []*FilterGroup `protobuf:"bytes,3,rep,name=filterGroups,proto3" json:"filterGroups,omitempty" validateGeneric:"required" validateCreate:"required" validateUpdate:"required"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkPassActionRequest) Reset() {
	*x = BulkPassActionRequest{}
	mi := &file_io_common_common_objects_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkPassActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPassActionRequest) ProtoMessage() {}

func (x *BulkPassActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPassActionRequest.ProtoReflect.Descriptor instead.
func (*BulkPassActionRequest) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{17}
}

func (x *BulkPassActionRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *BulkPassActionRequest) GetProtocol() PassProtocol {
	if x != nil {
		return x.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (x *BulkPassActionRequest) GetFilterGroups() []*FilterGroup {
	if x != nil {
		return x.FilterGroups
	}
	return nil
}

// DataItems are used to supply additional metadata when creating or updating passes.
type DataItems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key value pairs. All values must be strings, but formatting and conversion can be defined in the pass template. Keys should be alphanumeric, start with a lowercase level and use camel case.  They can be accessed in the pass template by prefixing with 'meta.'. E.g. 'meta.myCustomKey'.
	Items         map[string]string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataItems) Reset() {
	*x = DataItems{}
	mi := &file_io_common_common_objects_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItems) ProtoMessage() {}

func (x *DataItems) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItems.ProtoReflect.Descriptor instead.
func (*DataItems) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{18}
}

func (x *DataItems) GetItems() map[string]string {
	if x != nil {
		return x.Items
	}
	return nil
}

// To be used for booleans where we want users to be able to set to off / false via the API.
type PkBool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PkBool) Reset() {
	*x = PkBool{}
	mi := &file_io_common_common_objects_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PkBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkBool) ProtoMessage() {}

func (x *PkBool) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkBool.ProtoReflect.Descriptor instead.
func (*PkBool) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{19}
}

func (x *PkBool) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ClassObjectInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateGeneric:"required"
	Protocol PassProtocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=io.PassProtocol" json:"protocol,omitempty" validateGeneric:"required"`
	// The object ID (objects belong to the class object; i.e. member tier id, coupon offer id, etc).
	// @tag: validateGeneric:"required"
	ObjectId string `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty" validateGeneric:"required"`
	// The class ID (highest level protocol object; i.e. member program id, etc). Required only for the Member protocol.
	// @tag: validateGeneric:"omitempty"
	ClassId       string `protobuf:"bytes,3,opt,name=classId,proto3" json:"classId,omitempty" validateGeneric:"omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassObjectInput) Reset() {
	*x = ClassObjectInput{}
	mi := &file_io_common_common_objects_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassObjectInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassObjectInput) ProtoMessage() {}

func (x *ClassObjectInput) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassObjectInput.ProtoReflect.Descriptor instead.
func (*ClassObjectInput) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{20}
}

func (x *ClassObjectInput) GetProtocol() PassProtocol {
	if x != nil {
		return x.Protocol
	}
	return PassProtocol_PASS_PROTOCOL_DO_NOT_USE
}

func (x *ClassObjectInput) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ClassObjectInput) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

// To be used for setting recursive datetime.
type RecursiveDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Crontab expression (https://crontab.guru) to declare the recursive billing period start.
	// @tag: validateCreate:"required"
	Schedule string `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty" validateCreate:"required"`
	// State adds flexibility to the recursive date where user can shift scheduled date. Default is TIME_STATE_CURRENT.
	// Eg. Given schedule is @monthly, if state is PREVIOUS, the recursive date will be 'At 00:00 on day-of-PREVIOUS-month 1'.
	State         TimeState `protobuf:"varint,2,opt,name=state,proto3,enum=io.TimeState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecursiveDate) Reset() {
	*x = RecursiveDate{}
	mi := &file_io_common_common_objects_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecursiveDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecursiveDate) ProtoMessage() {}

func (x *RecursiveDate) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecursiveDate.ProtoReflect.Descriptor instead.
func (*RecursiveDate) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{21}
}

func (x *RecursiveDate) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *RecursiveDate) GetState() TimeState {
	if x != nil {
		return x.State
	}
	return TimeState_TIME_STATE_NONE
}

type MonthlyRecursive struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The day which the recursive period starts. Available values are 1-31.
	// Selecting 31 for the last day of any month.
	// @tag: validateCreate:"min=1,max=31"
	DayOfMonth int32 `protobuf:"varint,1,opt,name=dayOfMonth,proto3" json:"dayOfMonth,omitempty" validateCreate:"min=1,max=31"`
	// Default hour is 0.
	// @tag: validateCreate:"min=0,max=23"
	Hour int32 `protobuf:"varint,2,opt,name=hour,proto3" json:"hour,omitempty" validateCreate:"min=0,max=23"`
	// Default minute is 0.
	// @tag: validateCreate:"min=0,max=59"
	Minute int32 `protobuf:"varint,3,opt,name=minute,proto3" json:"minute,omitempty" validateCreate:"min=0,max=59"`
	// Default second is 0.
	// @tag: validateCreate:"min=0,max=59"
	Second int32 `protobuf:"varint,4,opt,name=second,proto3" json:"second,omitempty" validateCreate:"min=0,max=59"`
	// State to select the month.
	// Eg. Given the date=15 and state=TIME_STATE_CURRENT, then the date is 15th of the current month.
	// @tag: validateCreate:"required"
	State         TimeState `protobuf:"varint,5,opt,name=state,proto3,enum=io.TimeState" json:"state,omitempty" validateCreate:"required"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthlyRecursive) Reset() {
	*x = MonthlyRecursive{}
	mi := &file_io_common_common_objects_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlyRecursive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyRecursive) ProtoMessage() {}

func (x *MonthlyRecursive) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyRecursive.ProtoReflect.Descriptor instead.
func (*MonthlyRecursive) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{22}
}

func (x *MonthlyRecursive) GetDayOfMonth() int32 {
	if x != nil {
		return x.DayOfMonth
	}
	return 0
}

func (x *MonthlyRecursive) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *MonthlyRecursive) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *MonthlyRecursive) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

func (x *MonthlyRecursive) GetState() TimeState {
	if x != nil {
		return x.State
	}
	return TimeState_TIME_STATE_NONE
}

type YearlyRecursive struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The month in which the recursive period starts.
	// @tag: validateCreate:"required,min=1,max=12"
	Month int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty" validateCreate:"required,min=1,max=12"`
	// The day on which the recursive period starts. Available values are 1-31.
	// Selecting dayOfMonth=29 and month=2, for the last day of Feb of any year.
	// @tag: validateCreate:"min=1,max=31"
	DayOfMonth int32 `protobuf:"varint,2,opt,name=dayOfMonth,proto3" json:"dayOfMonth,omitempty" validateCreate:"min=1,max=31"`
	// Default hour is 0.
	// @tag: validateCreate:"min=0,max=23"
	Hour int32 `protobuf:"varint,3,opt,name=hour,proto3" json:"hour,omitempty" validateCreate:"min=0,max=23"`
	// Default minute is 0.
	// @tag: validateCreate:"min=0,max=59"
	Minute int32 `protobuf:"varint,4,opt,name=minute,proto3" json:"minute,omitempty" validateCreate:"min=0,max=59"`
	// Default second is 0.
	// @tag: validateCreate:"min=0,max=59"
	Second int32 `protobuf:"varint,5,opt,name=second,proto3" json:"second,omitempty" validateCreate:"min=0,max=59"`
	// State to select the year.
	// Eg. Given the month=1, date=15 and state=TIME_STATE_CURRENT, then the date is 15th Jan of the current year.
	// @tag: validateCreate:"required"
	State         TimeState `protobuf:"varint,6,opt,name=state,proto3,enum=io.TimeState" json:"state,omitempty" validateCreate:"required"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YearlyRecursive) Reset() {
	*x = YearlyRecursive{}
	mi := &file_io_common_common_objects_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YearlyRecursive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearlyRecursive) ProtoMessage() {}

func (x *YearlyRecursive) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearlyRecursive.ProtoReflect.Descriptor instead.
func (*YearlyRecursive) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{23}
}

func (x *YearlyRecursive) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *YearlyRecursive) GetDayOfMonth() int32 {
	if x != nil {
		return x.DayOfMonth
	}
	return 0
}

func (x *YearlyRecursive) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *YearlyRecursive) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *YearlyRecursive) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

func (x *YearlyRecursive) GetState() TimeState {
	if x != nil {
		return x.State
	}
	return TimeState_TIME_STATE_NONE
}

type PassIds struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateCreate:"uuidCompressedString,dive", validateUpdate:"uuidCompressedString,dive", validateGeneric:"uuidCompressedString,dive"
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty" validateCreate:"uuidCompressedString,dive" validateUpdate:"uuidCompressedString,dive" validateGeneric:"uuidCompressedString,dive"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassIds) Reset() {
	*x = PassIds{}
	mi := &file_io_common_common_objects_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassIds) ProtoMessage() {}

func (x *PassIds) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassIds.ProtoReflect.Descriptor instead.
func (*PassIds) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{24}
}

func (x *PassIds) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Protocol struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateCreate:"required", validateUpdate:"required", validateGeneric:"required"
	Protocol *Protocol `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty" validateCreate:"required" validateUpdate:"required" validateGeneric:"required"`
	// @tag: validateCreate:"required", validateUpdate:"required", validateGeneric:"required"
	ClassId string `protobuf:"bytes,2,opt,name=classId,proto3" json:"classId,omitempty" validateCreate:"required" validateUpdate:"required" validateGeneric:"required"`
	// Optional pagination criteria. If not provided, then all passes for the class will be selected.
	Pagination    *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	mi := &file_io_common_common_objects_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_common_objects_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_io_common_common_objects_proto_rawDescGZIP(), []int{25}
}

func (x *Protocol) GetProtocol() *Protocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *Protocol) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *Protocol) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_io_common_common_objects_proto protoreflect.FileDescriptor

var file_io_common_common_objects_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x69, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x03, 0x49, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2d, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x1d, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29,
	0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x07, 0x42, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x42, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x22, 0x4a, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x65, 0x0a, 0x09,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3c, 0x92, 0x41, 0x39,
	0x8a, 0x01, 0x36, 0x5e, 0x28, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x34, 0x7d, 0x29, 0x2d, 0x3f,
	0x28, 0x31, 0x5b, 0x30, 0x2d, 0x32, 0x5d, 0x7c, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x29, 0x2d,
	0x3f, 0x28, 0x33, 0x5b, 0x30, 0x31, 0x5d, 0x7c, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b,
	0x31, 0x32, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x78, 0x92, 0x41, 0x75, 0x8a, 0x01, 0x72,
	0x5e, 0x28, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x34, 0x7d, 0x29, 0x2d, 0x3f, 0x28, 0x31, 0x5b,
	0x30, 0x2d, 0x32, 0x5d, 0x7c, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x29, 0x2d, 0x3f, 0x28, 0x33,
	0x5b, 0x30, 0x31, 0x5d, 0x7c, 0x30, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x7c, 0x5b, 0x31, 0x32, 0x5d,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x54, 0x28, 0x32, 0x5b, 0x30, 0x2d, 0x33, 0x5d, 0x7c, 0x5b,
	0x30, 0x31, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3a, 0x28, 0x5b, 0x30, 0x2d, 0x35, 0x5d,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x3a, 0x28, 0x5b, 0x30, 0x2d, 0x35, 0x5d, 0x5b, 0x30, 0x2d,
	0x39, 0x5d, 0x29, 0x28, 0x2e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x31, 0x2c, 0x33, 0x7d, 0x29,
	0x3f, 0x24, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a,
	0x0a, 0x50, 0x61, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x55, 0x52,
	0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x55, 0x52, 0x4c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x55, 0x52, 0x4c, 0x22, 0x35, 0x0a, 0x0b, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x51,
	0x0a, 0x11, 0x50, 0x61, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x33, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x75, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x18, 0x0a, 0x06, 0x50, 0x6b, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x76, 0x0a, 0x10, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x22, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x69, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x52,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79, 0x4f,
	0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61,
	0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x69, 0x6f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x59, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x75,
	0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x69, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x1b, 0x0a, 0x07, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x7e, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x28, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2a, 0x34, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45,
	0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x02, 0x2a, 0x29, 0x0a, 0x06, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46, 0x46,
	0x10, 0x02, 0x2a, 0x6b, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49,
	0x4f, 0x55, 0x53, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a,
	0x57, 0x0a, 0x10, 0x50, 0x61, 0x73, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x5f,
	0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x55, 0x4c, 0x54,
	0x49, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x10, 0x2a, 0x67, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x55, 0x53, 0x41, 0x47,
	0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x50, 0x50,
	0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x55,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x10,
	0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x10,
	0x04, 0x42, 0x47, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5a, 0x24, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x61, 0x73,
	0x73, 0x6b, 0x69, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6f, 0xaa, 0x02, 0x0c, 0x50, 0x61,
	0x73, 0x73, 0x4b, 0x69, 0x74, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_io_common_common_objects_proto_rawDescOnce sync.Once
	file_io_common_common_objects_proto_rawDescData []byte
)

func file_io_common_common_objects_proto_rawDescGZIP() []byte {
	file_io_common_common_objects_proto_rawDescOnce.Do(func() {
		file_io_common_common_objects_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_common_common_objects_proto_rawDesc), len(file_io_common_common_objects_proto_rawDesc)))
	})
	return file_io_common_common_objects_proto_rawDescData
}

var file_io_common_common_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_io_common_common_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_io_common_common_objects_proto_goTypes = []any{
	(ListPosition)(0),             // 0: io.ListPosition
	(Toggle)(0),                   // 1: io.Toggle
	(TimeState)(0),                // 2: io.TimeState
	(PassBundleFormat)(0),         // 3: io.PassBundleFormat
	(UsageType)(0),                // 4: io.UsageType
	(*Id)(nil),                    // 5: io.Id
	(*Ids)(nil),                   // 6: io.Ids
	(*Url)(nil),                   // 7: io.Url
	(*Count)(nil),                 // 8: io.Count
	(*FileBytes)(nil),             // 9: io.FileBytes
	(*Boolean)(nil),               // 10: io.Boolean
	(*Strings)(nil),               // 11: io.Strings
	(*Payload)(nil),               // 12: io.Payload
	(*Date)(nil),                  // 13: io.Date
	(*Time)(nil),                  // 14: io.Time
	(*LocalDate)(nil),             // 15: io.LocalDate
	(*LocalDateTime)(nil),         // 16: io.LocalDateTime
	(*PassBundle)(nil),            // 17: io.PassBundle
	(*PassBundles)(nil),           // 18: io.PassBundles
	(*PassBundleRequest)(nil),     // 19: io.PassBundleRequest
	(*ListRequestDeprecated)(nil), // 20: io.ListRequestDeprecated
	(*ListRequest)(nil),           // 21: io.ListRequest
	(*BulkPassActionRequest)(nil), // 22: io.BulkPassActionRequest
	(*DataItems)(nil),             // 23: io.DataItems
	(*PkBool)(nil),                // 24: io.PkBool
	(*ClassObjectInput)(nil),      // 25: io.ClassObjectInput
	(*RecursiveDate)(nil),         // 26: io.RecursiveDate
	(*MonthlyRecursive)(nil),      // 27: io.MonthlyRecursive
	(*YearlyRecursive)(nil),       // 28: io.YearlyRecursive
	(*PassIds)(nil),               // 29: io.PassIds
	(*Protocol)(nil),              // 30: io.Protocol
	nil,                           // 31: io.DataItems.ItemsEntry
	(PassProtocol)(0),             // 32: io.PassProtocol
	(*Pagination)(nil),            // 33: io.Pagination
	(*Filters)(nil),               // 34: io.Filters
	(*FilterGroup)(nil),           // 35: io.FilterGroup
}
var file_io_common_common_objects_proto_depIdxs = []int32{
	17, // 0: io.PassBundles.passes:type_name -> io.PassBundle
	3,  // 1: io.PassBundleRequest.format:type_name -> io.PassBundleFormat
	32, // 2: io.ListRequestDeprecated.protocol:type_name -> io.PassProtocol
	33, // 3: io.ListRequestDeprecated.pagination:type_name -> io.Pagination
	32, // 4: io.ListRequest.protocol:type_name -> io.PassProtocol
	34, // 5: io.ListRequest.filters:type_name -> io.Filters
	32, // 6: io.BulkPassActionRequest.protocol:type_name -> io.PassProtocol
	35, // 7: io.BulkPassActionRequest.filterGroups:type_name -> io.FilterGroup
	31, // 8: io.DataItems.items:type_name -> io.DataItems.ItemsEntry
	32, // 9: io.ClassObjectInput.protocol:type_name -> io.PassProtocol
	2,  // 10: io.RecursiveDate.state:type_name -> io.TimeState
	2,  // 11: io.MonthlyRecursive.state:type_name -> io.TimeState
	2,  // 12: io.YearlyRecursive.state:type_name -> io.TimeState
	30, // 13: io.Protocol.protocol:type_name -> io.Protocol
	33, // 14: io.Protocol.pagination:type_name -> io.Pagination
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_io_common_common_objects_proto_init() }
func file_io_common_common_objects_proto_init() {
	if File_io_common_common_objects_proto != nil {
		return
	}
	file_io_common_pagination_proto_init()
	file_io_common_filter_proto_init()
	file_io_common_protocols_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_common_common_objects_proto_rawDesc), len(file_io_common_common_objects_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_common_common_objects_proto_goTypes,
		DependencyIndexes: file_io_common_common_objects_proto_depIdxs,
		EnumInfos:         file_io_common_common_objects_proto_enumTypes,
		MessageInfos:      file_io_common_common_objects_proto_msgTypes,
	}.Build()
	File_io_common_common_objects_proto = out.File
	file_io_common_common_objects_proto_goTypes = nil
	file_io_common_common_objects_proto_depIdxs = nil
}
