//*
// Message
//
// Send push notification to your pass holders.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/common/message.proto

package io

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageStatus int32

const (
	MessageStatus_MESSAGE_STATUS_DO_NOT_USE MessageStatus = 0
	MessageStatus_SCHEDULED                 MessageStatus = 1
	MessageStatus_ACTIVE                    MessageStatus = 2
	MessageStatus_EXPIRED                   MessageStatus = 3
	MessageStatus_CANCELLED                 MessageStatus = 4
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_STATUS_DO_NOT_USE",
		1: "SCHEDULED",
		2: "ACTIVE",
		3: "EXPIRED",
		4: "CANCELLED",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_STATUS_DO_NOT_USE": 0,
		"SCHEDULED":                 1,
		"ACTIVE":                    2,
		"EXPIRED":                   3,
		"CANCELLED":                 4,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_message_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_io_common_message_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @tag: validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateUpdate:"required"`
	// The message title. This is used as a label in iOS and as the title in Google Pay.
	// @tag: validateCreate:"required" validateUpdate:"required"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized message title.
	LocalizedTitle *LocalizedString `protobuf:"bytes,3,opt,name=localizedTitle,proto3" json:"localizedTitle,omitempty"`
	// Plain text content cannot contain hyperlinks. Google Pay messages cannot have links, use URLs instead.
	// @tag: validateCreate:"required" validateUpdate:"required"
	PlainTextContent string `protobuf:"bytes,4,opt,name=plainTextContent,proto3" json:"plainTextContent,omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized plain text content.
	LocalizedPlainTextContent *LocalizedString `protobuf:"bytes,5,opt,name=localizedPlainTextContent,proto3" json:"localizedPlainTextContent,omitempty"`
	// Rich text content that can contain hyperlinks. No other markup is accepted. Links will only function on iOS devices. Ignored for Google Pay.
	RichTextContent string `protobuf:"bytes,6,opt,name=richTextContent,proto3" json:"richTextContent,omitempty"`
	// Localized rich text content.
	LocalizedRichTextContent *LocalizedString `protobuf:"bytes,7,opt,name=localizedRichTextContent,proto3" json:"localizedRichTextContent,omitempty"`
	// Urls will be prioritized over existing urls on the Google Pay Pass. They are ignored for Apple Wallet.
	Urls []*Url `protobuf:"bytes,8,rep,name=urls,proto3" json:"urls,omitempty"`
	// Images to display for the duration of the message. For Google Pay, only a 'message' type image will be used. For Apple Wallet, any of strip, eventStrip, background, logo, thumbnail and footer can be used, depending on the underlying pass type.
	Images *ImageIds `protobuf:"bytes,9,opt,name=images,proto3" json:"images,omitempty"`
	// Priority the lower the priority, the lower down the message will be rendered when there are multiple messages. Defaults to a value of 10.
	Priority uint32 `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`
	// The date and time to display the message. The value must be in RFC3339 format. If omitted, the current timestamp will be used.
	// @tag: validateCreate:"rfc3339,omitempty" validateUpdate:"rfc3339,omitempty"
	DisplayFrom string `protobuf:"bytes,11,opt,name=displayFrom,proto3" json:"displayFrom,omitempty" validateCreate:"rfc3339,omitempty" validateUpdate:"rfc3339,omitempty"`
	// The date and time to remove the message. The value must be in RFC3339 format. If omitted, the message will be displayed indefinitely until it is cancelled.
	// @tag: validateCreate:"rfc3339,omitempty" validateUpdate:"rfc3339,omitempty"
	DisplayUntil  string `protobuf:"bytes,12,opt,name=displayUntil,proto3" json:"displayUntil,omitempty" validateCreate:"rfc3339,omitempty" validateUpdate:"rfc3339,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_io_common_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Message) GetLocalizedTitle() *LocalizedString {
	if x != nil {
		return x.LocalizedTitle
	}
	return nil
}

func (x *Message) GetPlainTextContent() string {
	if x != nil {
		return x.PlainTextContent
	}
	return ""
}

func (x *Message) GetLocalizedPlainTextContent() *LocalizedString {
	if x != nil {
		return x.LocalizedPlainTextContent
	}
	return nil
}

func (x *Message) GetRichTextContent() string {
	if x != nil {
		return x.RichTextContent
	}
	return ""
}

func (x *Message) GetLocalizedRichTextContent() *LocalizedString {
	if x != nil {
		return x.LocalizedRichTextContent
	}
	return nil
}

func (x *Message) GetUrls() []*Url {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Message) GetImages() *ImageIds {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Message) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Message) GetDisplayFrom() string {
	if x != nil {
		return x.DisplayFrom
	}
	return ""
}

func (x *Message) GetDisplayUntil() string {
	if x != nil {
		return x.DisplayUntil
	}
	return ""
}

// If no parameters are provided, all messages will be returned
type GetMessagesForProtocolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional protocol.  If no protocol is provided, all messages for the company that meet the pagination criteria will be returned.
	// @tag "validateGeneric:required_with:ClassId"
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Optional class id must be provided if protocol is not empty.
	// @tag "validateGeneric:required_with:Protocol"
	ClassId string `protobuf:"bytes,2,opt,name=classId,proto3" json:"classId,omitempty"`
	// Optional pagination criteria. If not provided, then all messages for the class will be returned. Ignored if protocol not provided.
	Pagination    *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesForProtocolRequest) Reset() {
	*x = GetMessagesForProtocolRequest{}
	mi := &file_io_common_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesForProtocolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesForProtocolRequest) ProtoMessage() {}

func (x *GetMessagesForProtocolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesForProtocolRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesForProtocolRequest) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{1}
}

func (x *GetMessagesForProtocolRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetMessagesForProtocolRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetMessagesForProtocolRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status        MessageStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=io.MessageStatus" json:"status,omitempty"`
	Recipients    uint32                 `protobuf:"varint,3,opt,name=recipients,proto3" json:"recipients,omitempty"`
	DistributedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=distributedAt,proto3" json:"distributedAt,omitempty"`
	WithdrawnAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=withdrawnAt,proto3" json:"withdrawnAt,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageResponse) Reset() {
	*x = GetMessageResponse{}
	mi := &file_io_common_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageResponse) ProtoMessage() {}

func (x *GetMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageResponse.ProtoReflect.Descriptor instead.
func (*GetMessageResponse) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{2}
}

func (x *GetMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *GetMessageResponse) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_DO_NOT_USE
}

func (x *GetMessageResponse) GetRecipients() uint32 {
	if x != nil {
		return x.Recipients
	}
	return 0
}

func (x *GetMessageResponse) GetDistributedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DistributedAt
	}
	return nil
}

func (x *GetMessageResponse) GetWithdrawnAt() *timestamppb.Timestamp {
	if x != nil {
		return x.WithdrawnAt
	}
	return nil
}

func (x *GetMessageResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetMessageResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetMessageHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*GetMessageResponse  `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageHistoryResponse) Reset() {
	*x = GetMessageHistoryResponse{}
	mi := &file_io_common_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageHistoryResponse) ProtoMessage() {}

func (x *GetMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessageHistoryResponse) GetMessages() []*GetMessageResponse {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendMessageRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	// Types that are valid to be assigned to Target:
	//
	//	*SendMessageRequest_PassIds
	//	*SendMessageRequest_Protocol
	Target        isSendMessageRequest_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_io_common_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageRequest) GetTarget() isSendMessageRequest_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SendMessageRequest) GetPassIds() *PassIds {
	if x != nil {
		if x, ok := x.Target.(*SendMessageRequest_PassIds); ok {
			return x.PassIds
		}
	}
	return nil
}

func (x *SendMessageRequest) GetProtocol() *Protocol {
	if x != nil {
		if x, ok := x.Target.(*SendMessageRequest_Protocol); ok {
			return x.Protocol
		}
	}
	return nil
}

type isSendMessageRequest_Target interface {
	isSendMessageRequest_Target()
}

type SendMessageRequest_PassIds struct {
	PassIds *PassIds `protobuf:"bytes,2,opt,name=passIds,proto3,oneof"`
}

type SendMessageRequest_Protocol struct {
	Protocol *Protocol `protobuf:"bytes,3,opt,name=protocol,proto3,oneof"`
}

func (*SendMessageRequest_PassIds) isSendMessageRequest_Target() {}

func (*SendMessageRequest_Protocol) isSendMessageRequest_Target() {}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_io_common_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_io_common_message_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_io_common_message_proto protoreflect.FileDescriptor

var file_io_common_message_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6f, 0x1a, 0x1c, 0x69,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x69, 0x6f, 0x2f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b,
	0x04, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x19, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x69,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x18, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x85, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfa, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a,
	0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x4f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x49, 0x64, 0x73,
	0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x08, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2a, 0x65, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x42, 0x47, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5a, 0x24,
	0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67,
	0x6f, 0x2f, 0x69, 0x6f, 0xaa, 0x02, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x4b, 0x69, 0x74, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_io_common_message_proto_rawDescOnce sync.Once
	file_io_common_message_proto_rawDescData []byte
)

func file_io_common_message_proto_rawDescGZIP() []byte {
	file_io_common_message_proto_rawDescOnce.Do(func() {
		file_io_common_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_common_message_proto_rawDesc), len(file_io_common_message_proto_rawDesc)))
	})
	return file_io_common_message_proto_rawDescData
}

var file_io_common_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_io_common_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_io_common_message_proto_goTypes = []any{
	(MessageStatus)(0),                    // 0: io.MessageStatus
	(*Message)(nil),                       // 1: io.Message
	(*GetMessagesForProtocolRequest)(nil), // 2: io.GetMessagesForProtocolRequest
	(*GetMessageResponse)(nil),            // 3: io.GetMessageResponse
	(*GetMessageHistoryResponse)(nil),     // 4: io.GetMessageHistoryResponse
	(*SendMessageRequest)(nil),            // 5: io.SendMessageRequest
	(*SendMessageResponse)(nil),           // 6: io.SendMessageResponse
	(*LocalizedString)(nil),               // 7: io.LocalizedString
	(*Url)(nil),                           // 8: io.Url
	(*ImageIds)(nil),                      // 9: io.ImageIds
	(*Pagination)(nil),                    // 10: io.Pagination
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
	(*PassIds)(nil),                       // 12: io.PassIds
	(*Protocol)(nil),                      // 13: io.Protocol
}
var file_io_common_message_proto_depIdxs = []int32{
	7,  // 0: io.Message.localizedTitle:type_name -> io.LocalizedString
	7,  // 1: io.Message.localizedPlainTextContent:type_name -> io.LocalizedString
	7,  // 2: io.Message.localizedRichTextContent:type_name -> io.LocalizedString
	8,  // 3: io.Message.urls:type_name -> io.Url
	9,  // 4: io.Message.images:type_name -> io.ImageIds
	10, // 5: io.GetMessagesForProtocolRequest.pagination:type_name -> io.Pagination
	1,  // 6: io.GetMessageResponse.message:type_name -> io.Message
	0,  // 7: io.GetMessageResponse.status:type_name -> io.MessageStatus
	11, // 8: io.GetMessageResponse.distributedAt:type_name -> google.protobuf.Timestamp
	11, // 9: io.GetMessageResponse.withdrawnAt:type_name -> google.protobuf.Timestamp
	11, // 10: io.GetMessageResponse.createdAt:type_name -> google.protobuf.Timestamp
	11, // 11: io.GetMessageResponse.updatedAt:type_name -> google.protobuf.Timestamp
	3,  // 12: io.GetMessageHistoryResponse.messages:type_name -> io.GetMessageResponse
	12, // 13: io.SendMessageRequest.passIds:type_name -> io.PassIds
	13, // 14: io.SendMessageRequest.protocol:type_name -> io.Protocol
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_io_common_message_proto_init() }
func file_io_common_message_proto_init() {
	if File_io_common_message_proto != nil {
		return
	}
	file_io_common_localization_proto_init()
	file_io_common_pagination_proto_init()
	file_io_common_common_objects_proto_init()
	file_io_image_image_proto_init()
	file_io_common_message_proto_msgTypes[4].OneofWrappers = []any{
		(*SendMessageRequest_PassIds)(nil),
		(*SendMessageRequest_Protocol)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_common_message_proto_rawDesc), len(file_io_common_message_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_common_message_proto_goTypes,
		DependencyIndexes: file_io_common_message_proto_depIdxs,
		EnumInfos:         file_io_common_message_proto_enumTypes,
		MessageInfos:      file_io_common_message_proto_msgTypes,
	}.Build()
	File_io_common_message_proto = out.File
	file_io_common_message_proto_goTypes = nil
	file_io_common_message_proto_depIdxs = nil
}
