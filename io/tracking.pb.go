//*
// Tracking
//
// Can be used for Facebook Pixel and Google Analytics tracking on landing and pass pages.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/common/tracking.proto

package io

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Standard Facebook Pixel events that we support
type FbPixelStandardEvent int32

const (
	FbPixelStandardEvent_FBP_STANDARD_EVENT_DO_NOT_USE FbPixelStandardEvent = 0
	// This is the default pixel tracking page visits.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_PAGE_VIEW FbPixelStandardEvent = 1
	// When a registration form is completed.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_COMPLETE_REGISTRATION FbPixelStandardEvent = 2
	// When a sign up is completed.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_LEAD FbPixelStandardEvent = 3
	// When a purchase is made or checkout flow is completed.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_PURCHASE FbPixelStandardEvent = 4
	// When a person books an appointment to visit one of your locations.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_SCHEDULE FbPixelStandardEvent = 5
	// When a person starts a free trial of a product or service you offer.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_START_TRIAL FbPixelStandardEvent = 6
	// When a person applies for a product, service, or program you offer.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_SUBMIT_APPLICATION FbPixelStandardEvent = 7
	// When a person applies to a start a paid subscription for a product or service you offer.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_SUBSCRIBE FbPixelStandardEvent = 8
	// A visit to a web page you care about (for example, a product page or landing page). ViewContent tells you if someone visits a web page's URL, but not what they see or do on that page.
	FbPixelStandardEvent_FBP_STANDARD_EVENT_VIEW_CONTENT FbPixelStandardEvent = 9
)

// Enum value maps for FbPixelStandardEvent.
var (
	FbPixelStandardEvent_name = map[int32]string{
		0: "FBP_STANDARD_EVENT_DO_NOT_USE",
		1: "FBP_STANDARD_EVENT_PAGE_VIEW",
		2: "FBP_STANDARD_EVENT_COMPLETE_REGISTRATION",
		3: "FBP_STANDARD_EVENT_LEAD",
		4: "FBP_STANDARD_EVENT_PURCHASE",
		5: "FBP_STANDARD_EVENT_SCHEDULE",
		6: "FBP_STANDARD_EVENT_START_TRIAL",
		7: "FBP_STANDARD_EVENT_SUBMIT_APPLICATION",
		8: "FBP_STANDARD_EVENT_SUBSCRIBE",
		9: "FBP_STANDARD_EVENT_VIEW_CONTENT",
	}
	FbPixelStandardEvent_value = map[string]int32{
		"FBP_STANDARD_EVENT_DO_NOT_USE":            0,
		"FBP_STANDARD_EVENT_PAGE_VIEW":             1,
		"FBP_STANDARD_EVENT_COMPLETE_REGISTRATION": 2,
		"FBP_STANDARD_EVENT_LEAD":                  3,
		"FBP_STANDARD_EVENT_PURCHASE":              4,
		"FBP_STANDARD_EVENT_SCHEDULE":              5,
		"FBP_STANDARD_EVENT_START_TRIAL":           6,
		"FBP_STANDARD_EVENT_SUBMIT_APPLICATION":    7,
		"FBP_STANDARD_EVENT_SUBSCRIBE":             8,
		"FBP_STANDARD_EVENT_VIEW_CONTENT":          9,
	}
)

func (x FbPixelStandardEvent) Enum() *FbPixelStandardEvent {
	p := new(FbPixelStandardEvent)
	*p = x
	return p
}

func (x FbPixelStandardEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FbPixelStandardEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_tracking_proto_enumTypes[0].Descriptor()
}

func (FbPixelStandardEvent) Type() protoreflect.EnumType {
	return &file_io_common_tracking_proto_enumTypes[0]
}

func (x FbPixelStandardEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FbPixelStandardEvent.Descriptor instead.
func (FbPixelStandardEvent) EnumDescriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{0}
}

type GoogleAnalyticsDataCollectionPageEvent int32

const (
	GoogleAnalyticsDataCollectionPageEvent_GA_DC_EVENT_DO_NOT_USE GoogleAnalyticsDataCollectionPageEvent = 0
	// This is the default GA even tracking page visits.
	GoogleAnalyticsDataCollectionPageEvent_GA_DC_EVENT_PAGE_VIEW GoogleAnalyticsDataCollectionPageEvent = 1
	// When a user submits the data collection form.
	GoogleAnalyticsDataCollectionPageEvent_GA_DC_EVENT_SUBMIT_FORM GoogleAnalyticsDataCollectionPageEvent = 2
)

// Enum value maps for GoogleAnalyticsDataCollectionPageEvent.
var (
	GoogleAnalyticsDataCollectionPageEvent_name = map[int32]string{
		0: "GA_DC_EVENT_DO_NOT_USE",
		1: "GA_DC_EVENT_PAGE_VIEW",
		2: "GA_DC_EVENT_SUBMIT_FORM",
	}
	GoogleAnalyticsDataCollectionPageEvent_value = map[string]int32{
		"GA_DC_EVENT_DO_NOT_USE":  0,
		"GA_DC_EVENT_PAGE_VIEW":   1,
		"GA_DC_EVENT_SUBMIT_FORM": 2,
	}
)

func (x GoogleAnalyticsDataCollectionPageEvent) Enum() *GoogleAnalyticsDataCollectionPageEvent {
	p := new(GoogleAnalyticsDataCollectionPageEvent)
	*p = x
	return p
}

func (x GoogleAnalyticsDataCollectionPageEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoogleAnalyticsDataCollectionPageEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_tracking_proto_enumTypes[1].Descriptor()
}

func (GoogleAnalyticsDataCollectionPageEvent) Type() protoreflect.EnumType {
	return &file_io_common_tracking_proto_enumTypes[1]
}

func (x GoogleAnalyticsDataCollectionPageEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoogleAnalyticsDataCollectionPageEvent.Descriptor instead.
func (GoogleAnalyticsDataCollectionPageEvent) EnumDescriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{1}
}

type GoogleAnalyticsPassRenderPageEvent int32

const (
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_DO_NOT_USE GoogleAnalyticsPassRenderPageEvent = 0
	// This is the default GA event tracking page visits.
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_PAGE_VIEW GoogleAnalyticsPassRenderPageEvent = 1
	// When a user clicks the Add to Apple Wallet button.
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_ADD_TO_APPLE_WALLET_CLICK GoogleAnalyticsPassRenderPageEvent = 2
	// When a user clicks the view pass in Apple Wallet button.
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_VIEW_PASS_IN_APPLE_WALLET_CLICK GoogleAnalyticsPassRenderPageEvent = 3
	// When a user clicks the Save to Google Pay button.
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_SAVE_TO_GOOGLE_PAY_CLICK GoogleAnalyticsPassRenderPageEvent = 4
	// When a user switches the language.
	GoogleAnalyticsPassRenderPageEvent_GA_PP_EVENT_CHANGE_LANGUAGE GoogleAnalyticsPassRenderPageEvent = 5
)

// Enum value maps for GoogleAnalyticsPassRenderPageEvent.
var (
	GoogleAnalyticsPassRenderPageEvent_name = map[int32]string{
		0: "GA_PP_EVENT_DO_NOT_USE",
		1: "GA_PP_EVENT_PAGE_VIEW",
		2: "GA_PP_EVENT_ADD_TO_APPLE_WALLET_CLICK",
		3: "GA_PP_EVENT_VIEW_PASS_IN_APPLE_WALLET_CLICK",
		4: "GA_PP_EVENT_SAVE_TO_GOOGLE_PAY_CLICK",
		5: "GA_PP_EVENT_CHANGE_LANGUAGE",
	}
	GoogleAnalyticsPassRenderPageEvent_value = map[string]int32{
		"GA_PP_EVENT_DO_NOT_USE":                      0,
		"GA_PP_EVENT_PAGE_VIEW":                       1,
		"GA_PP_EVENT_ADD_TO_APPLE_WALLET_CLICK":       2,
		"GA_PP_EVENT_VIEW_PASS_IN_APPLE_WALLET_CLICK": 3,
		"GA_PP_EVENT_SAVE_TO_GOOGLE_PAY_CLICK":        4,
		"GA_PP_EVENT_CHANGE_LANGUAGE":                 5,
	}
)

func (x GoogleAnalyticsPassRenderPageEvent) Enum() *GoogleAnalyticsPassRenderPageEvent {
	p := new(GoogleAnalyticsPassRenderPageEvent)
	*p = x
	return p
}

func (x GoogleAnalyticsPassRenderPageEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoogleAnalyticsPassRenderPageEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_tracking_proto_enumTypes[2].Descriptor()
}

func (GoogleAnalyticsPassRenderPageEvent) Type() protoreflect.EnumType {
	return &file_io_common_tracking_proto_enumTypes[2]
}

func (x GoogleAnalyticsPassRenderPageEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoogleAnalyticsPassRenderPageEvent.Descriptor instead.
func (GoogleAnalyticsPassRenderPageEvent) EnumDescriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{2}
}

type GoogleAnalyticsCustomerInitiatedRedemptionPageEvent int32

const (
	GoogleAnalyticsCustomerInitiatedRedemptionPageEvent_GA_CIRP_EVENT_DO_NOT_USE GoogleAnalyticsCustomerInitiatedRedemptionPageEvent = 0
	// This is the default GA event tracking page visits.
	GoogleAnalyticsCustomerInitiatedRedemptionPageEvent_GA_CIRP_EVENT_PAGE_VIEW GoogleAnalyticsCustomerInitiatedRedemptionPageEvent = 1
	// When a user redeems the coupon.
	GoogleAnalyticsCustomerInitiatedRedemptionPageEvent_GA_CIRP_EVENT_REDEEM GoogleAnalyticsCustomerInitiatedRedemptionPageEvent = 2
)

// Enum value maps for GoogleAnalyticsCustomerInitiatedRedemptionPageEvent.
var (
	GoogleAnalyticsCustomerInitiatedRedemptionPageEvent_name = map[int32]string{
		0: "GA_CIRP_EVENT_DO_NOT_USE",
		1: "GA_CIRP_EVENT_PAGE_VIEW",
		2: "GA_CIRP_EVENT_REDEEM",
	}
	GoogleAnalyticsCustomerInitiatedRedemptionPageEvent_value = map[string]int32{
		"GA_CIRP_EVENT_DO_NOT_USE": 0,
		"GA_CIRP_EVENT_PAGE_VIEW":  1,
		"GA_CIRP_EVENT_REDEEM":     2,
	}
)

func (x GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) Enum() *GoogleAnalyticsCustomerInitiatedRedemptionPageEvent {
	p := new(GoogleAnalyticsCustomerInitiatedRedemptionPageEvent)
	*p = x
	return p
}

func (x GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_io_common_tracking_proto_enumTypes[3].Descriptor()
}

func (GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) Type() protoreflect.EnumType {
	return &file_io_common_tracking_proto_enumTypes[3]
}

func (x GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoogleAnalyticsCustomerInitiatedRedemptionPageEvent.Descriptor instead.
func (GoogleAnalyticsCustomerInitiatedRedemptionPageEvent) EnumDescriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{3}
}

type FacebookPixelSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Facebook Pixel ID of the account.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	PixelId string `protobuf:"bytes,1,opt,name=pixelId,proto3" json:"pixelId,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// List of standard events for the data collection page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	DataCollectionPageStandardEvents []*StandardEvent `protobuf:"bytes,2,rep,name=dataCollectionPageStandardEvents,proto3" json:"dataCollectionPageStandardEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	// List of custom events for the data collection page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	DataCollectionPageCustomEvents []*CustomEvent `protobuf:"bytes,3,rep,name=dataCollectionPageCustomEvents,proto3" json:"dataCollectionPageCustomEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	// List of standard events for the pass render page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	PassPageStandardEvents []*StandardEvent `protobuf:"bytes,4,rep,name=passPageStandardEvents,proto3" json:"passPageStandardEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	// List of custom events for the pass render page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	PassPageCustomEvents []*CustomEvent `protobuf:"bytes,5,rep,name=passPageCustomEvents,proto3" json:"passPageCustomEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	// List of standard events for the coupon customer initiated redemption page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	CustomerInitiatedRedemptionPageStandardEvents []*StandardEvent `protobuf:"bytes,6,rep,name=customerInitiatedRedemptionPageStandardEvents,proto3" json:"customerInitiatedRedemptionPageStandardEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	// List of custom events for the coupon customer initiated redemption page
	// @tag: validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"
	CustomerInitiatedRedemptionPageCustomEvents []*CustomEvent `protobuf:"bytes,7,rep,name=customerInitiatedRedemptionPageCustomEvents,proto3" json:"customerInitiatedRedemptionPageCustomEvents,omitempty" validateGeneric:"dive,omitempty" validateCreate:"dive,omitempty" validateUpdate:"dive,omitempty"`
	unknownFields                               protoimpl.UnknownFields
	sizeCache                                   protoimpl.SizeCache
}

func (x *FacebookPixelSettings) Reset() {
	*x = FacebookPixelSettings{}
	mi := &file_io_common_tracking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacebookPixelSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookPixelSettings) ProtoMessage() {}

func (x *FacebookPixelSettings) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_tracking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookPixelSettings.ProtoReflect.Descriptor instead.
func (*FacebookPixelSettings) Descriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{0}
}

func (x *FacebookPixelSettings) GetPixelId() string {
	if x != nil {
		return x.PixelId
	}
	return ""
}

func (x *FacebookPixelSettings) GetDataCollectionPageStandardEvents() []*StandardEvent {
	if x != nil {
		return x.DataCollectionPageStandardEvents
	}
	return nil
}

func (x *FacebookPixelSettings) GetDataCollectionPageCustomEvents() []*CustomEvent {
	if x != nil {
		return x.DataCollectionPageCustomEvents
	}
	return nil
}

func (x *FacebookPixelSettings) GetPassPageStandardEvents() []*StandardEvent {
	if x != nil {
		return x.PassPageStandardEvents
	}
	return nil
}

func (x *FacebookPixelSettings) GetPassPageCustomEvents() []*CustomEvent {
	if x != nil {
		return x.PassPageCustomEvents
	}
	return nil
}

func (x *FacebookPixelSettings) GetCustomerInitiatedRedemptionPageStandardEvents() []*StandardEvent {
	if x != nil {
		return x.CustomerInitiatedRedemptionPageStandardEvents
	}
	return nil
}

func (x *FacebookPixelSettings) GetCustomerInitiatedRedemptionPageCustomEvents() []*CustomEvent {
	if x != nil {
		return x.CustomerInitiatedRedemptionPageCustomEvents
	}
	return nil
}

type StandardEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Standard event
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	Event FbPixelStandardEvent `protobuf:"varint,1,opt,name=event,proto3,enum=io.FbPixelStandardEvent" json:"event,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Optional event properties
	// @tag: validateGeneric:"omitempty,json" validateCreate:"omitempty,json" validateUpdate:"omitempty,json"
	Properties    string `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty" validateGeneric:"omitempty,json" validateCreate:"omitempty,json" validateUpdate:"omitempty,json"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StandardEvent) Reset() {
	*x = StandardEvent{}
	mi := &file_io_common_tracking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StandardEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardEvent) ProtoMessage() {}

func (x *StandardEvent) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_tracking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardEvent.ProtoReflect.Descriptor instead.
func (*StandardEvent) Descriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{1}
}

func (x *StandardEvent) GetEvent() FbPixelStandardEvent {
	if x != nil {
		return x.Event
	}
	return FbPixelStandardEvent_FBP_STANDARD_EVENT_DO_NOT_USE
}

func (x *StandardEvent) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type CustomEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Custom event name
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Optional event properties
	// @tag: validateGeneric:"omitempty,json" validateCreate:"omitempty,json" validateUpdate:"omitempty,json"
	Properties    string `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty" validateGeneric:"omitempty,json" validateCreate:"omitempty,json" validateUpdate:"omitempty,json"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomEvent) Reset() {
	*x = CustomEvent{}
	mi := &file_io_common_tracking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomEvent) ProtoMessage() {}

func (x *CustomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_tracking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomEvent.ProtoReflect.Descriptor instead.
func (*CustomEvent) Descriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{2}
}

func (x *CustomEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *CustomEvent) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type GoogleAnalyticsSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of Google Analytics ID's to track ('UA-XXXXX-Y', 'UA-XXXXX-B', etc).
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	TrackingIds []string `protobuf:"bytes,1,rep,name=trackingIds,proto3" json:"trackingIds,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Events to send to Google on the data collection page.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	DataCollectionPageEvents []GoogleAnalyticsDataCollectionPageEvent `protobuf:"varint,2,rep,packed,name=dataCollectionPageEvents,proto3,enum=io.GoogleAnalyticsDataCollectionPageEvent" json:"dataCollectionPageEvents,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Events to send to Google on the pass render page.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	PassRenderPageEvents []GoogleAnalyticsPassRenderPageEvent `protobuf:"varint,3,rep,packed,name=passRenderPageEvents,proto3,enum=io.GoogleAnalyticsPassRenderPageEvent" json:"passRenderPageEvents,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Events to send to Google on the custom initiated redemption page.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	CustomerInitiatedRedemption []GoogleAnalyticsCustomerInitiatedRedemptionPageEvent `protobuf:"varint,4,rep,packed,name=customerInitiatedRedemption,proto3,enum=io.GoogleAnalyticsCustomerInitiatedRedemptionPageEvent" json:"customerInitiatedRedemption,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *GoogleAnalyticsSettings) Reset() {
	*x = GoogleAnalyticsSettings{}
	mi := &file_io_common_tracking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleAnalyticsSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAnalyticsSettings) ProtoMessage() {}

func (x *GoogleAnalyticsSettings) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_tracking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAnalyticsSettings.ProtoReflect.Descriptor instead.
func (*GoogleAnalyticsSettings) Descriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{3}
}

func (x *GoogleAnalyticsSettings) GetTrackingIds() []string {
	if x != nil {
		return x.TrackingIds
	}
	return nil
}

func (x *GoogleAnalyticsSettings) GetDataCollectionPageEvents() []GoogleAnalyticsDataCollectionPageEvent {
	if x != nil {
		return x.DataCollectionPageEvents
	}
	return nil
}

func (x *GoogleAnalyticsSettings) GetPassRenderPageEvents() []GoogleAnalyticsPassRenderPageEvent {
	if x != nil {
		return x.PassRenderPageEvents
	}
	return nil
}

func (x *GoogleAnalyticsSettings) GetCustomerInitiatedRedemption() []GoogleAnalyticsCustomerInitiatedRedemptionPageEvent {
	if x != nil {
		return x.CustomerInitiatedRedemption
	}
	return nil
}

type TrackingSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Facebook Pixel settings
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	FacebookPixelSettings *FacebookPixelSettings `protobuf:"bytes,1,opt,name=facebookPixelSettings,proto3" json:"facebookPixelSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Google Analytics settings
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	GoogleAnalyticsSettings *GoogleAnalyticsSettings `protobuf:"bytes,2,opt,name=googleAnalyticsSettings,proto3" json:"googleAnalyticsSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TrackingSettings) Reset() {
	*x = TrackingSettings{}
	mi := &file_io_common_tracking_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingSettings) ProtoMessage() {}

func (x *TrackingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_io_common_tracking_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingSettings.ProtoReflect.Descriptor instead.
func (*TrackingSettings) Descriptor() ([]byte, []int) {
	return file_io_common_tracking_proto_rawDescGZIP(), []int{4}
}

func (x *TrackingSettings) GetFacebookPixelSettings() *FacebookPixelSettings {
	if x != nil {
		return x.FacebookPixelSettings
	}
	return nil
}

func (x *TrackingSettings) GetGoogleAnalyticsSettings() *GoogleAnalyticsSettings {
	if x != nil {
		return x.GoogleAnalyticsSettings
	}
	return nil
}

var File_io_common_tracking_proto protoreflect.FileDescriptor

var file_io_common_tracking_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6f, 0x22, 0xe5,
	0x04, 0x0a, 0x15, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x69, 0x78, 0x65, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x5d, 0x0a, 0x20, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x20, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x57, 0x0a, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x1e, 0x64, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x16, 0x70, 0x61,
	0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x2d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x2d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x2b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x2b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x2e, 0x46, 0x62, 0x50, 0x69,
	0x78, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x49, 0x0a,
	0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xfa, 0x02, 0x0a, 0x17, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x12, 0x66, 0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5a,
	0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x79, 0x0a, 0x1b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x1b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x15, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6f, 0x2e, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x15, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x69,
	0x78, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x55, 0x0a, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2a, 0xfe, 0x02, 0x0a, 0x14, 0x46, 0x62, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x46,
	0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x20,
	0x0a, 0x1c, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01,
	0x12, 0x2c, 0x0a, 0x28, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x46,
	0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b,
	0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x22, 0x0a,
	0x1e, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x10,
	0x06, 0x12, 0x29, 0x0a, 0x25, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52,
	0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x41,
	0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c,
	0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x08, 0x12, 0x23,
	0x0a, 0x1f, 0x46, 0x42, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
	0x54, 0x10, 0x09, 0x2a, 0x7c, 0x0a, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x16, 0x47, 0x41, 0x5f, 0x44, 0x43, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x4f, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x41, 0x5f,
	0x44, 0x43, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x49,
	0x45, 0x57, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x5f, 0x44, 0x43, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10,
	0x02, 0x2a, 0x82, 0x02, 0x0a, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x5f, 0x50,
	0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55,
	0x53, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x41, 0x5f, 0x50, 0x50, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12,
	0x29, 0x0a, 0x25, 0x47, 0x41, 0x5f, 0x50, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41,
	0x44, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c, 0x4c,
	0x45, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x41,
	0x5f, 0x50, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x50,
	0x41, 0x53, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x5f, 0x57, 0x41, 0x4c,
	0x4c, 0x45, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x47,
	0x41, 0x5f, 0x50, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f,
	0x54, 0x4f, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x43, 0x4c,
	0x49, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x41, 0x5f, 0x50, 0x50, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4c, 0x41, 0x4e, 0x47,
	0x55, 0x41, 0x47, 0x45, 0x10, 0x05, 0x2a, 0x8a, 0x01, 0x0a, 0x33, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x64, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x18, 0x47, 0x41, 0x5f, 0x43, 0x49, 0x52, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x47, 0x41, 0x5f, 0x43, 0x49, 0x52, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41,
	0x47, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x5f,
	0x43, 0x49, 0x52, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x45, 0x45,
	0x4d, 0x10, 0x02, 0x42, 0x47, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b,
	0x69, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5a, 0x24, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70,
	0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6f, 0xaa, 0x02, 0x0c,
	0x50, 0x61, 0x73, 0x73, 0x4b, 0x69, 0x74, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_io_common_tracking_proto_rawDescOnce sync.Once
	file_io_common_tracking_proto_rawDescData []byte
)

func file_io_common_tracking_proto_rawDescGZIP() []byte {
	file_io_common_tracking_proto_rawDescOnce.Do(func() {
		file_io_common_tracking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_common_tracking_proto_rawDesc), len(file_io_common_tracking_proto_rawDesc)))
	})
	return file_io_common_tracking_proto_rawDescData
}

var file_io_common_tracking_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_io_common_tracking_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_io_common_tracking_proto_goTypes = []any{
	(FbPixelStandardEvent)(0),                                // 0: io.FbPixelStandardEvent
	(GoogleAnalyticsDataCollectionPageEvent)(0),              // 1: io.GoogleAnalyticsDataCollectionPageEvent
	(GoogleAnalyticsPassRenderPageEvent)(0),                  // 2: io.GoogleAnalyticsPassRenderPageEvent
	(GoogleAnalyticsCustomerInitiatedRedemptionPageEvent)(0), // 3: io.GoogleAnalyticsCustomerInitiatedRedemptionPageEvent
	(*FacebookPixelSettings)(nil),                            // 4: io.FacebookPixelSettings
	(*StandardEvent)(nil),                                    // 5: io.StandardEvent
	(*CustomEvent)(nil),                                      // 6: io.CustomEvent
	(*GoogleAnalyticsSettings)(nil),                          // 7: io.GoogleAnalyticsSettings
	(*TrackingSettings)(nil),                                 // 8: io.TrackingSettings
}
var file_io_common_tracking_proto_depIdxs = []int32{
	5,  // 0: io.FacebookPixelSettings.dataCollectionPageStandardEvents:type_name -> io.StandardEvent
	6,  // 1: io.FacebookPixelSettings.dataCollectionPageCustomEvents:type_name -> io.CustomEvent
	5,  // 2: io.FacebookPixelSettings.passPageStandardEvents:type_name -> io.StandardEvent
	6,  // 3: io.FacebookPixelSettings.passPageCustomEvents:type_name -> io.CustomEvent
	5,  // 4: io.FacebookPixelSettings.customerInitiatedRedemptionPageStandardEvents:type_name -> io.StandardEvent
	6,  // 5: io.FacebookPixelSettings.customerInitiatedRedemptionPageCustomEvents:type_name -> io.CustomEvent
	0,  // 6: io.StandardEvent.event:type_name -> io.FbPixelStandardEvent
	1,  // 7: io.GoogleAnalyticsSettings.dataCollectionPageEvents:type_name -> io.GoogleAnalyticsDataCollectionPageEvent
	2,  // 8: io.GoogleAnalyticsSettings.passRenderPageEvents:type_name -> io.GoogleAnalyticsPassRenderPageEvent
	3,  // 9: io.GoogleAnalyticsSettings.customerInitiatedRedemption:type_name -> io.GoogleAnalyticsCustomerInitiatedRedemptionPageEvent
	4,  // 10: io.TrackingSettings.facebookPixelSettings:type_name -> io.FacebookPixelSettings
	7,  // 11: io.TrackingSettings.googleAnalyticsSettings:type_name -> io.GoogleAnalyticsSettings
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_io_common_tracking_proto_init() }
func file_io_common_tracking_proto_init() {
	if File_io_common_tracking_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_common_tracking_proto_rawDesc), len(file_io_common_tracking_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_common_tracking_proto_goTypes,
		DependencyIndexes: file_io_common_tracking_proto_depIdxs,
		EnumInfos:         file_io_common_tracking_proto_enumTypes,
		MessageInfos:      file_io_common_tracking_proto_msgTypes,
	}.Build()
	File_io_common_tracking_proto = out.File
	file_io_common_tracking_proto_goTypes = nil
	file_io_common_tracking_proto_depIdxs = nil
}
