//*
// Coupon Campaign holds the business logic & distribution settings of the Coupon Campaign.
//
// @todo: Confirm with Midori; the new callback / webhooks APIs are protocol independent (if I have understood correctly), and need to be subscribed to; no need to put anything in protocol.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/single_use_coupons/campaign.proto

package single_use_coupons

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	io "github.com/PassKit/passkit-golang-grpc-sdk/io"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Coupon Campaign Details.
type CouponCampaign struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PassKit generated program id (22 characters).
	// @tag: validateGeneric:"required" validateCreate:"-" validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required" validateCreate:"-" validateUpdate:"required"`
	// Name of the coupon campaign; used in the portal / API. Not shown to the end-customer.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized name of the coupon campaign.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedName *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedName,proto3" json:"localizedName,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
	// @tag: validateGeneric:"-" validateCreate:"required" validateUpdate:"-"
	Status []io.ProjectStatus `protobuf:"varint,5,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty" validateGeneric:"-" validateCreate:"required" validateUpdate:"-"`
	// Leave empty for draft campaigns. Needs to be set for campaigns where status contains PROJECT_PUBLISHED.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"
	PassTypeIdentifier string `protobuf:"bytes,6,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"`
	// The campaign timezone.
	IanaTimezone string `protobuf:"bytes,7,opt,name=ianaTimezone,proto3" json:"ianaTimezone,omitempty"`
	// The date the campaign was created.
	// @tag: validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"
	Created *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty" validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"`
	// The date the campaign updated.
	// @tag: validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"
	Updated       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated,proto3" json:"updated,omitempty" validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CouponCampaign) Reset() {
	*x = CouponCampaign{}
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CouponCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponCampaign) ProtoMessage() {}

func (x *CouponCampaign) ProtoReflect() protoreflect.Message {
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponCampaign.ProtoReflect.Descriptor instead.
func (*CouponCampaign) Descriptor() ([]byte, []int) {
	return file_io_single_use_coupons_campaign_proto_rawDescGZIP(), []int{0}
}

func (x *CouponCampaign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CouponCampaign) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CouponCampaign) GetLocalizedName() *io.LocalizedString {
	if x != nil {
		return x.LocalizedName
	}
	return nil
}

func (x *CouponCampaign) GetStatus() []io.ProjectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CouponCampaign) GetPassTypeIdentifier() string {
	if x != nil {
		return x.PassTypeIdentifier
	}
	return ""
}

func (x *CouponCampaign) GetIanaTimezone() string {
	if x != nil {
		return x.IanaTimezone
	}
	return ""
}

func (x *CouponCampaign) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *CouponCampaign) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

// CouponCampaignAnalyticsResponse contains redemption stats for the campaign. Other campaign analytics can be taken from the generic analytics endpoint.
type CouponCampaignAnalyticsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Period unit of data returned (day, month or year).
	Period io.Period `protobuf:"varint,1,opt,name=period,proto3,enum=io.Period" json:"period,omitempty"`
	// Passes redeemed in this period.
	Redeemed uint32 `protobuf:"varint,2,opt,name=redeemed,proto3" json:"redeemed,omitempty"`
	// Total number of pass redeemed for each device type.
	Devices *io.DeviceBreakdown `protobuf:"bytes,3,opt,name=devices,proto3" json:"devices,omitempty"`
	// Total number of pass redeemed for each distribution source.
	Sources map[string]uint32 `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Breakdown of data by day, month or year.
	Data          []*io.ChartDataPoints `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CouponCampaignAnalyticsResponse) Reset() {
	*x = CouponCampaignAnalyticsResponse{}
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CouponCampaignAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponCampaignAnalyticsResponse) ProtoMessage() {}

func (x *CouponCampaignAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponCampaignAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*CouponCampaignAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_io_single_use_coupons_campaign_proto_rawDescGZIP(), []int{1}
}

func (x *CouponCampaignAnalyticsResponse) GetPeriod() io.Period {
	if x != nil {
		return x.Period
	}
	return io.Period(0)
}

func (x *CouponCampaignAnalyticsResponse) GetRedeemed() uint32 {
	if x != nil {
		return x.Redeemed
	}
	return 0
}

func (x *CouponCampaignAnalyticsResponse) GetDevices() *io.DeviceBreakdown {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *CouponCampaignAnalyticsResponse) GetSources() map[string]uint32 {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *CouponCampaignAnalyticsResponse) GetData() []*io.ChartDataPoints {
	if x != nil {
		return x.Data
	}
	return nil
}

// Contains payload for copying a campaign.
type CampaignCopyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uuid of the campaign to copy.
	// @tag: validateCreate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateCreate:"required"`
	// Optional name for the new campaign.
	// @tag: validateCreate:"omitempty"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validateCreate:"omitempty"`
	// Status to set the copied campaign to.
	// @tag: validateCreate:"omitempty"
	Status []io.ProjectStatus `protobuf:"varint,3,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty" validateCreate:"omitempty"`
	// Can optionally be provided if setting status to published (requires a prod cert).
	// @tag: validateCreate:"omitempty"
	PassTypeIdentifier string `protobuf:"bytes,4,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty" validateCreate:"omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CampaignCopyRequest) Reset() {
	*x = CampaignCopyRequest{}
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CampaignCopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignCopyRequest) ProtoMessage() {}

func (x *CampaignCopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_single_use_coupons_campaign_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignCopyRequest.ProtoReflect.Descriptor instead.
func (*CampaignCopyRequest) Descriptor() ([]byte, []int) {
	return file_io_single_use_coupons_campaign_proto_rawDescGZIP(), []int{2}
}

func (x *CampaignCopyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CampaignCopyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CampaignCopyRequest) GetStatus() []io.ProjectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CampaignCopyRequest) GetPassTypeIdentifier() string {
	if x != nil {
		return x.PassTypeIdentifier
	}
	return ""
}

var File_io_single_use_coupons_campaign_proto protoreflect.FileDescriptor

var file_io_single_use_coupons_campaign_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x69, 0x6f, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x69, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x04,
	0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x61,
	0x6e, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x61, 0x6e, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x3a, 0x92, 0x01, 0x92, 0x41, 0x8e,
	0x01, 0x0a, 0x8b, 0x01, 0x2a, 0x0f, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x20, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x32, 0x48, 0x48, 0x6f, 0x6c, 0x64, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x20,
	0x26, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x20, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0xd2,
	0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xd2, 0x01, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64,
	0xd2, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0xd2, 0x01, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0xd2, 0x01, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x4a,
	0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x09, 0x10,
	0x0a, 0x22, 0xd1, 0x02, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x7c, 0x0a, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x5a, 0x37, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x64,
	0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6f, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0xaa, 0x02, 0x1d, 0x50, 0x61, 0x73,
	0x73, 0x4b, 0x69, 0x74, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_io_single_use_coupons_campaign_proto_rawDescOnce sync.Once
	file_io_single_use_coupons_campaign_proto_rawDescData []byte
)

func file_io_single_use_coupons_campaign_proto_rawDescGZIP() []byte {
	file_io_single_use_coupons_campaign_proto_rawDescOnce.Do(func() {
		file_io_single_use_coupons_campaign_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_single_use_coupons_campaign_proto_rawDesc), len(file_io_single_use_coupons_campaign_proto_rawDesc)))
	})
	return file_io_single_use_coupons_campaign_proto_rawDescData
}

var file_io_single_use_coupons_campaign_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_io_single_use_coupons_campaign_proto_goTypes = []any{
	(*CouponCampaign)(nil),                  // 0: single_use_coupons.CouponCampaign
	(*CouponCampaignAnalyticsResponse)(nil), // 1: single_use_coupons.CouponCampaignAnalyticsResponse
	(*CampaignCopyRequest)(nil),             // 2: single_use_coupons.CampaignCopyRequest
	nil,                                     // 3: single_use_coupons.CouponCampaignAnalyticsResponse.SourcesEntry
	(*io.LocalizedString)(nil),              // 4: io.LocalizedString
	(io.ProjectStatus)(0),                   // 5: io.ProjectStatus
	(*timestamppb.Timestamp)(nil),           // 6: google.protobuf.Timestamp
	(io.Period)(0),                          // 7: io.Period
	(*io.DeviceBreakdown)(nil),              // 8: io.DeviceBreakdown
	(*io.ChartDataPoints)(nil),              // 9: io.ChartDataPoints
}
var file_io_single_use_coupons_campaign_proto_depIdxs = []int32{
	4, // 0: single_use_coupons.CouponCampaign.localizedName:type_name -> io.LocalizedString
	5, // 1: single_use_coupons.CouponCampaign.status:type_name -> io.ProjectStatus
	6, // 2: single_use_coupons.CouponCampaign.created:type_name -> google.protobuf.Timestamp
	6, // 3: single_use_coupons.CouponCampaign.updated:type_name -> google.protobuf.Timestamp
	7, // 4: single_use_coupons.CouponCampaignAnalyticsResponse.period:type_name -> io.Period
	8, // 5: single_use_coupons.CouponCampaignAnalyticsResponse.devices:type_name -> io.DeviceBreakdown
	3, // 6: single_use_coupons.CouponCampaignAnalyticsResponse.sources:type_name -> single_use_coupons.CouponCampaignAnalyticsResponse.SourcesEntry
	9, // 7: single_use_coupons.CouponCampaignAnalyticsResponse.data:type_name -> io.ChartDataPoints
	5, // 8: single_use_coupons.CampaignCopyRequest.status:type_name -> io.ProjectStatus
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_io_single_use_coupons_campaign_proto_init() }
func file_io_single_use_coupons_campaign_proto_init() {
	if File_io_single_use_coupons_campaign_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_single_use_coupons_campaign_proto_rawDesc), len(file_io_single_use_coupons_campaign_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_single_use_coupons_campaign_proto_goTypes,
		DependencyIndexes: file_io_single_use_coupons_campaign_proto_depIdxs,
		MessageInfos:      file_io_single_use_coupons_campaign_proto_msgTypes,
	}.Build()
	File_io_single_use_coupons_campaign_proto = out.File
	file_io_single_use_coupons_campaign_proto_goTypes = nil
	file_io_single_use_coupons_campaign_proto_depIdxs = nil
}
