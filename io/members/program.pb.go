//*
// Membership Programs
//
// Membership Programs allow a company to control the business logic of their program.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: io/member/program.proto

package members

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	io "github.com/PassKit/passkit-golang-grpc-sdk/io"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProgramAutoUpDownGradeTierType int32

const (
	// Auto up / down grades based on points.
	ProgramAutoUpDownGradeTierType_UPDOWNGRADE_POINTS ProgramAutoUpDownGradeTierType = 0
	// Auto up / down grades based on secondary points.
	ProgramAutoUpDownGradeTierType_UPDOWNGRADE_SECONDARY_POINTS ProgramAutoUpDownGradeTierType = 1
	// Auto up / down grades based on tier points.
	ProgramAutoUpDownGradeTierType_UPDOWNGRADE_TIER_POINTS ProgramAutoUpDownGradeTierType = 2
	// Auto up / down grades based on # of visits.
	ProgramAutoUpDownGradeTierType_UPDOWNGRADE_VISITS ProgramAutoUpDownGradeTierType = 3
)

// Enum value maps for ProgramAutoUpDownGradeTierType.
var (
	ProgramAutoUpDownGradeTierType_name = map[int32]string{
		0: "UPDOWNGRADE_POINTS",
		1: "UPDOWNGRADE_SECONDARY_POINTS",
		2: "UPDOWNGRADE_TIER_POINTS",
		3: "UPDOWNGRADE_VISITS",
	}
	ProgramAutoUpDownGradeTierType_value = map[string]int32{
		"UPDOWNGRADE_POINTS":           0,
		"UPDOWNGRADE_SECONDARY_POINTS": 1,
		"UPDOWNGRADE_TIER_POINTS":      2,
		"UPDOWNGRADE_VISITS":           3,
	}
)

func (x ProgramAutoUpDownGradeTierType) Enum() *ProgramAutoUpDownGradeTierType {
	p := new(ProgramAutoUpDownGradeTierType)
	*p = x
	return p
}

func (x ProgramAutoUpDownGradeTierType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgramAutoUpDownGradeTierType) Descriptor() protoreflect.EnumDescriptor {
	return file_io_member_program_proto_enumTypes[0].Descriptor()
}

func (ProgramAutoUpDownGradeTierType) Type() protoreflect.EnumType {
	return &file_io_member_program_proto_enumTypes[0]
}

func (x ProgramAutoUpDownGradeTierType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgramAutoUpDownGradeTierType.Descriptor instead.
func (ProgramAutoUpDownGradeTierType) EnumDescriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{0}
}

type BalanceType int32

const (
	BalanceType_BALANCE_TYPE_STRING BalanceType = 0
	BalanceType_BALANCE_TYPE_INT    BalanceType = 1
	BalanceType_BALANCE_TYPE_DOUBLE BalanceType = 2
	BalanceType_BALANCE_TYPE_MONEY  BalanceType = 3
)

// Enum value maps for BalanceType.
var (
	BalanceType_name = map[int32]string{
		0: "BALANCE_TYPE_STRING",
		1: "BALANCE_TYPE_INT",
		2: "BALANCE_TYPE_DOUBLE",
		3: "BALANCE_TYPE_MONEY",
	}
	BalanceType_value = map[string]int32{
		"BALANCE_TYPE_STRING": 0,
		"BALANCE_TYPE_INT":    1,
		"BALANCE_TYPE_DOUBLE": 2,
		"BALANCE_TYPE_MONEY":  3,
	}
)

func (x BalanceType) Enum() *BalanceType {
	p := new(BalanceType)
	*p = x
	return p
}

func (x BalanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BalanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_io_member_program_proto_enumTypes[1].Descriptor()
}

func (BalanceType) Type() protoreflect.EnumType {
	return &file_io_member_program_proto_enumTypes[1]
}

func (x BalanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BalanceType.Descriptor instead.
func (BalanceType) EnumDescriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{1}
}

type ProfileImageSetting int32

const (
	ProfileImageSetting_PROFILE_IMAGE_NONE     ProfileImageSetting = 0
	ProfileImageSetting_PROFILE_IMAGE_OPTIONAL ProfileImageSetting = 1
	ProfileImageSetting_PROFILE_IMAGE_REQUIRED ProfileImageSetting = 2
	// option to restict the profile image upload from the data collection page.
	ProfileImageSetting_PROFILE_IMAGE_RESTRICTED ProfileImageSetting = 3
)

// Enum value maps for ProfileImageSetting.
var (
	ProfileImageSetting_name = map[int32]string{
		0: "PROFILE_IMAGE_NONE",
		1: "PROFILE_IMAGE_OPTIONAL",
		2: "PROFILE_IMAGE_REQUIRED",
		3: "PROFILE_IMAGE_RESTRICTED",
	}
	ProfileImageSetting_value = map[string]int32{
		"PROFILE_IMAGE_NONE":       0,
		"PROFILE_IMAGE_OPTIONAL":   1,
		"PROFILE_IMAGE_REQUIRED":   2,
		"PROFILE_IMAGE_RESTRICTED": 3,
	}
)

func (x ProfileImageSetting) Enum() *ProfileImageSetting {
	p := new(ProfileImageSetting)
	*p = x
	return p
}

func (x ProfileImageSetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfileImageSetting) Descriptor() protoreflect.EnumDescriptor {
	return file_io_member_program_proto_enumTypes[2].Descriptor()
}

func (ProfileImageSetting) Type() protoreflect.EnumType {
	return &file_io_member_program_proto_enumTypes[2]
}

func (x ProfileImageSetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfileImageSetting.Descriptor instead.
func (ProfileImageSetting) EnumDescriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{2}
}

// Defines what medium we deliver the recovered pass.
type RecoverPassDelivery int32

const (
	// redirect to pass url.
	RecoverPassDelivery_DELIVERY_REDIRECT RecoverPassDelivery = 0
	// email user (resend welcome email)
	RecoverPassDelivery_DELIVERY_EMAIL RecoverPassDelivery = 1
	// sms to users phone
	RecoverPassDelivery_DELIVERY_SMS RecoverPassDelivery = 2
)

// Enum value maps for RecoverPassDelivery.
var (
	RecoverPassDelivery_name = map[int32]string{
		0: "DELIVERY_REDIRECT",
		1: "DELIVERY_EMAIL",
		2: "DELIVERY_SMS",
	}
	RecoverPassDelivery_value = map[string]int32{
		"DELIVERY_REDIRECT": 0,
		"DELIVERY_EMAIL":    1,
		"DELIVERY_SMS":      2,
	}
)

func (x RecoverPassDelivery) Enum() *RecoverPassDelivery {
	p := new(RecoverPassDelivery)
	*p = x
	return p
}

func (x RecoverPassDelivery) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecoverPassDelivery) Descriptor() protoreflect.EnumDescriptor {
	return file_io_member_program_proto_enumTypes[3].Descriptor()
}

func (RecoverPassDelivery) Type() protoreflect.EnumType {
	return &file_io_member_program_proto_enumTypes[3]
}

func (x RecoverPassDelivery) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecoverPassDelivery.Descriptor instead.
func (RecoverPassDelivery) EnumDescriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{3}
}

type PointsType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The balance type.
	BalanceType BalanceType `protobuf:"varint,1,opt,name=balanceType,proto3,enum=members.BalanceType" json:"balanceType,omitempty"`
	// The currency code; only needs to be provided if balance type equals BALANCE_TYPE_MONEY.
	CurrencyCode  string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PointsType) Reset() {
	*x = PointsType{}
	mi := &file_io_member_program_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PointsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsType) ProtoMessage() {}

func (x *PointsType) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsType.ProtoReflect.Descriptor instead.
func (*PointsType) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{0}
}

func (x *PointsType) GetBalanceType() BalanceType {
	if x != nil {
		return x.BalanceType
	}
	return BalanceType_BALANCE_TYPE_STRING
}

func (x *PointsType) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// The Program Details
type Program struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PassKit generated program id (22 characters).
	// @tag: validateGeneric:"required" validateCreate:"-" validateUpdate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validateGeneric:"required" validateCreate:"-" validateUpdate:"required"`
	// Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
	// @tag: validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validateGeneric:"omitempty" validateCreate:"required" validateUpdate:"required"`
	// Localized name of the membership program.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedName *io.LocalizedString `protobuf:"bytes,3,opt,name=localizedName,proto3" json:"localizedName,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
	// @tag: validateGeneric:"-" validateCreate:"-" validateUpdate:"-"
	Status []io.ProjectStatus `protobuf:"varint,4,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty" validateGeneric:"-" validateCreate:"-" validateUpdate:"-"`
	// The project quota.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	Quota *io.Quota `protobuf:"bytes,5,opt,name=quota,proto3" json:"quota,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"
	PassTypeIdentifier string `protobuf:"bytes,6,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"-"`
	// Contains the email & sms distribution settings for the program.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	DistributionSettings *io.DistributionSettings `protobuf:"bytes,7,opt,name=distributionSettings,proto3" json:"distributionSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	AutoDeleteDaysAfterExpiry uint32 `protobuf:"varint,8,opt,name=autoDeleteDaysAfterExpiry,proto3" json:"autoDeleteDaysAfterExpiry,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ExpiryMessage string `protobuf:"bytes,10,opt,name=expiryMessage,proto3" json:"expiryMessage,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Localized expiry message.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	LocalizedExpiryMessage *io.LocalizedString `protobuf:"bytes,11,opt,name=localizedExpiryMessage,proto3" json:"localizedExpiryMessage,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Points format for primary points.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	PointsType *PointsType `protobuf:"bytes,16,opt,name=pointsType,proto3" json:"pointsType,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Points format for secondary points.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	SecondaryPointsType *PointsType `protobuf:"bytes,17,opt,name=secondaryPointsType,proto3" json:"secondaryPointsType,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
	// @tag: validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"
	Metrics *io.Metrics `protobuf:"bytes,19,opt,name=metrics,proto3" json:"metrics,omitempty" validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"`
	// A list of dynamic fields which can be used to filter members.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	MetaFieldsList []string `protobuf:"bytes,20,rep,name=metaFieldsList,proto3" json:"metaFieldsList,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// The date the program was created.
	// @tag: validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"
	Created *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=created,proto3" json:"created,omitempty" validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"`
	// The date the program was updated.
	// @tag: validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"
	Updated *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=updated,proto3" json:"updated,omitempty" validateGeneric:"isdefault" validateCreate:"isdefault" validateUpdate:"isdefault"`
	// Indicates if the program requires member profile images on enrol.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ProfileImageSettings ProfileImageSetting `protobuf:"varint,23,opt,name=profileImageSettings,proto3,enum=members.ProfileImageSetting" json:"profileImageSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ApplyFieldToExternalIdOnEnrol *CustomExternalId `protobuf:"bytes,24,opt,name=applyFieldToExternalIdOnEnrol,proto3" json:"applyFieldToExternalIdOnEnrol,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Event settings for the program. Can be used if the program captures member events.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	EventCaptureSettings *EventCaptureSettings `protobuf:"bytes,25,opt,name=eventCaptureSettings,proto3" json:"eventCaptureSettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// Settings for how users can recover passes.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	PassRecoverySettings *PassRecoverySettings `protobuf:"bytes,26,opt,name=passRecoverySettings,proto3" json:"passRecoverySettings,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Program) Reset() {
	*x = Program{}
	mi := &file_io_member_program_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Program) ProtoMessage() {}

func (x *Program) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Program.ProtoReflect.Descriptor instead.
func (*Program) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{1}
}

func (x *Program) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Program) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Program) GetLocalizedName() *io.LocalizedString {
	if x != nil {
		return x.LocalizedName
	}
	return nil
}

func (x *Program) GetStatus() []io.ProjectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Program) GetQuota() *io.Quota {
	if x != nil {
		return x.Quota
	}
	return nil
}

func (x *Program) GetPassTypeIdentifier() string {
	if x != nil {
		return x.PassTypeIdentifier
	}
	return ""
}

func (x *Program) GetDistributionSettings() *io.DistributionSettings {
	if x != nil {
		return x.DistributionSettings
	}
	return nil
}

func (x *Program) GetAutoDeleteDaysAfterExpiry() uint32 {
	if x != nil {
		return x.AutoDeleteDaysAfterExpiry
	}
	return 0
}

func (x *Program) GetExpiryMessage() string {
	if x != nil {
		return x.ExpiryMessage
	}
	return ""
}

func (x *Program) GetLocalizedExpiryMessage() *io.LocalizedString {
	if x != nil {
		return x.LocalizedExpiryMessage
	}
	return nil
}

func (x *Program) GetPointsType() *PointsType {
	if x != nil {
		return x.PointsType
	}
	return nil
}

func (x *Program) GetSecondaryPointsType() *PointsType {
	if x != nil {
		return x.SecondaryPointsType
	}
	return nil
}

func (x *Program) GetMetrics() *io.Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Program) GetMetaFieldsList() []string {
	if x != nil {
		return x.MetaFieldsList
	}
	return nil
}

func (x *Program) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Program) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Program) GetProfileImageSettings() ProfileImageSetting {
	if x != nil {
		return x.ProfileImageSettings
	}
	return ProfileImageSetting_PROFILE_IMAGE_NONE
}

func (x *Program) GetApplyFieldToExternalIdOnEnrol() *CustomExternalId {
	if x != nil {
		return x.ApplyFieldToExternalIdOnEnrol
	}
	return nil
}

func (x *Program) GetEventCaptureSettings() *EventCaptureSettings {
	if x != nil {
		return x.EventCaptureSettings
	}
	return nil
}

func (x *Program) GetPassRecoverySettings() *PassRecoverySettings {
	if x != nil {
		return x.PassRecoverySettings
	}
	return nil
}

type EventCaptureSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Can be used to set data retention on event data. The key is the MemberEvents ENUM. Value is the data retention in days from the date the event record is created in the PassKit database.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	EventDataRetentionSettings map[uint32]uint32 `protobuf:"bytes,1,rep,name=eventDataRetentionSettings,proto3" json:"eventDataRetentionSettings,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// If set, sends an SMS with unique link to member's registered phone number on check-in. Member will have to click the link and show unique code to merchant / attendant.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	SmsConfirmUponCheckIn bool `protobuf:"varint,2,opt,name=smsConfirmUponCheckIn,proto3" json:"smsConfirmUponCheckIn,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	// If set, sends an Email with unique link to member's registered email on check-in. Member will have to click the link and show unique code to merchant / attendant.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	EmailConfirmUponCheckIn bool `protobuf:"varint,3,opt,name=emailConfirmUponCheckIn,proto3" json:"emailConfirmUponCheckIn,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *EventCaptureSettings) Reset() {
	*x = EventCaptureSettings{}
	mi := &file_io_member_program_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventCaptureSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCaptureSettings) ProtoMessage() {}

func (x *EventCaptureSettings) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCaptureSettings.ProtoReflect.Descriptor instead.
func (*EventCaptureSettings) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{2}
}

func (x *EventCaptureSettings) GetEventDataRetentionSettings() map[uint32]uint32 {
	if x != nil {
		return x.EventDataRetentionSettings
	}
	return nil
}

func (x *EventCaptureSettings) GetSmsConfirmUponCheckIn() bool {
	if x != nil {
		return x.SmsConfirmUponCheckIn
	}
	return false
}

func (x *EventCaptureSettings) GetEmailConfirmUponCheckIn() bool {
	if x != nil {
		return x.EmailConfirmUponCheckIn
	}
	return false
}

// Contains payload for copying a program
type ProgramCopyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uuid of the program to copy.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// optional name for the new program.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Status to set the copied program to.
	Status []io.ProjectStatus `protobuf:"varint,3,rep,packed,name=status,proto3,enum=io.ProjectStatus" json:"status,omitempty"`
	// Can optionally be provided if setting status to published (requires a prod cert).
	PassTypeIdentifier string `protobuf:"bytes,4,opt,name=passTypeIdentifier,proto3" json:"passTypeIdentifier,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProgramCopyRequest) Reset() {
	*x = ProgramCopyRequest{}
	mi := &file_io_member_program_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgramCopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramCopyRequest) ProtoMessage() {}

func (x *ProgramCopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramCopyRequest.ProtoReflect.Descriptor instead.
func (*ProgramCopyRequest) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{3}
}

func (x *ProgramCopyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProgramCopyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProgramCopyRequest) GetStatus() []io.ProjectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ProgramCopyRequest) GetPassTypeIdentifier() string {
	if x != nil {
		return x.PassTypeIdentifier
	}
	return ""
}

// Contains an array of programs.
type ListProgramsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of programs.
	Programs      []*Program `protobuf:"bytes,1,rep,name=programs,proto3" json:"programs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProgramsResponse) Reset() {
	*x = ListProgramsResponse{}
	mi := &file_io_member_program_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProgramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProgramsResponse) ProtoMessage() {}

func (x *ListProgramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProgramsResponse.ProtoReflect.Descriptor instead.
func (*ListProgramsResponse) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{4}
}

func (x *ListProgramsResponse) GetPrograms() []*Program {
	if x != nil {
		return x.Programs
	}
	return nil
}

type GetMetaKeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of distinct meta keys.
	Keys          []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetaKeysResponse) Reset() {
	*x = GetMetaKeysResponse{}
	mi := &file_io_member_program_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetaKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaKeysResponse) ProtoMessage() {}

func (x *GetMetaKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaKeysResponse.ProtoReflect.Descriptor instead.
func (*GetMetaKeysResponse) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{5}
}

func (x *GetMetaKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CustomExternalId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field name which becomes a source of external id value. Available unique names are: null, person.emailAddress, person.mobileNumber.
	// @tag: validateGeneric:"omitempty,oneof=null person.emailAddress person.mobileNumber startswith=meta." validateCreate:"omitempty,oneof=null person.emailAddress person.mobileNumber|startswith=meta." validateUpdate:"omitempty,oneof=null person.emailAddress person.mobileNumber|startswith=meta."
	FieldUniqueName string `protobuf:"bytes,1,opt,name=fieldUniqueName,proto3" json:"fieldUniqueName,omitempty" validateGeneric:"omitempty,oneof=null person.emailAddress person.mobileNumber startswith=meta." validateCreate:"omitempty,oneof=null person.emailAddress person.mobileNumber|startswith=meta." validateUpdate:"omitempty,oneof=null person.emailAddress person.mobileNumber|startswith=meta."`
	// Error message shown when provided value has been taken already.
	// @tag: validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"
	ErrorMessage  string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty" validateGeneric:"omitempty" validateCreate:"omitempty" validateUpdate:"omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomExternalId) Reset() {
	*x = CustomExternalId{}
	mi := &file_io_member_program_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomExternalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomExternalId) ProtoMessage() {}

func (x *CustomExternalId) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomExternalId.ProtoReflect.Descriptor instead.
func (*CustomExternalId) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{6}
}

func (x *CustomExternalId) GetFieldUniqueName() string {
	if x != nil {
		return x.FieldUniqueName
	}
	return ""
}

func (x *CustomExternalId) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// PassRecoverySettings details the logic for recovering a pass.
type PassRecoverySettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Determines if users can recover passes.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Determines the medium that the pass is delivered to the user.
	Delivery RecoverPassDelivery `protobuf:"varint,2,opt,name=delivery,proto3,enum=members.RecoverPassDelivery" json:"delivery,omitempty"`
	// The header text for the error page.
	ErrorPageHeader string `protobuf:"bytes,3,opt,name=errorPageHeader,proto3" json:"errorPageHeader,omitempty"`
	// The body text for the error page.
	ErrorPageBody string `protobuf:"bytes,4,opt,name=errorPageBody,proto3" json:"errorPageBody,omitempty"`
	// Sets which person and meta fields to match for pass recovery. This gives you control over how strict you want the match to be. If this is left blank, all person and meta fields provided need to match with what is in the member record.
	FieldsToMatchUponRecovery []string `protobuf:"bytes,5,rep,name=fieldsToMatchUponRecovery,proto3" json:"fieldsToMatchUponRecovery,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PassRecoverySettings) Reset() {
	*x = PassRecoverySettings{}
	mi := &file_io_member_program_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassRecoverySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassRecoverySettings) ProtoMessage() {}

func (x *PassRecoverySettings) ProtoReflect() protoreflect.Message {
	mi := &file_io_member_program_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassRecoverySettings.ProtoReflect.Descriptor instead.
func (*PassRecoverySettings) Descriptor() ([]byte, []int) {
	return file_io_member_program_proto_rawDescGZIP(), []int{7}
}

func (x *PassRecoverySettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PassRecoverySettings) GetDelivery() RecoverPassDelivery {
	if x != nil {
		return x.Delivery
	}
	return RecoverPassDelivery_DELIVERY_REDIRECT
}

func (x *PassRecoverySettings) GetErrorPageHeader() string {
	if x != nil {
		return x.ErrorPageHeader
	}
	return ""
}

func (x *PassRecoverySettings) GetErrorPageBody() string {
	if x != nil {
		return x.ErrorPageBody
	}
	return ""
}

func (x *PassRecoverySettings) GetFieldsToMatchUponRecovery() []string {
	if x != nil {
		return x.FieldsToMatchUponRecovery
	}
	return nil
}

var File_io_member_program_proto protoreflect.FileDescriptor

var file_io_member_program_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x69, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0a, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x86, 0x0a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x6f, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12, 0x70,
	0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x14, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6f, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x14, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x75, 0x74,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x79, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x61, 0x75,
	0x74, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x79, 0x73, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a,
	0x16, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x45, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x69, 0x6f, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x5f, 0x0a, 0x1d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x4f, 0x6e, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x1d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x4f, 0x6e, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x12, 0x51, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x51, 0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x73, 0x92, 0x41, 0x70, 0x0a,
	0x6e, 0x2a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x32, 0x53, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x20, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x20,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x20,
	0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0xd2,
	0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xd2, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4a,
	0x04, 0x08, 0x09, 0x10, 0x0a, 0x4a, 0x04, 0x08, 0x0c, 0x10, 0x0d, 0x4a, 0x04, 0x08, 0x0d, 0x10,
	0x0e, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f, 0x4a, 0x04, 0x08, 0x12, 0x10, 0x13, 0x22, 0xd4, 0x02,
	0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x7d, 0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x55, 0x70, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x55, 0x70, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x55, 0x70, 0x6f, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x55, 0x70, 0x6f, 0x6e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x1a, 0x4d, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x60, 0x0a, 0x10, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x01,
	0x0a, 0x14, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x38, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3c, 0x0a, 0x19, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x54, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2a, 0x8f, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x55,
	0x50, 0x44, 0x4f, 0x57, 0x4e, 0x47, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x53, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x50, 0x44, 0x4f, 0x57, 0x4e, 0x47, 0x52, 0x41,
	0x44, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x53, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44, 0x4f, 0x57, 0x4e, 0x47,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x50, 0x44, 0x4f, 0x57, 0x4e, 0x47, 0x52, 0x41, 0x44,
	0x45, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x54, 0x53, 0x10, 0x03, 0x2a, 0x6d, 0x0a, 0x0b, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x41, 0x4c,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x41, 0x4c, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x45, 0x59, 0x10, 0x03, 0x2a, 0x83, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a,
	0x52, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x4d,
	0x53, 0x10, 0x02, 0x42, 0x5f, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b,
	0x69, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5a,
	0x2c, 0x73, 0x74, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x69, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x64, 0x6b, 0x2f,
	0x67, 0x6f, 0x2f, 0x69, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0xaa, 0x02, 0x14,
	0x50, 0x61, 0x73, 0x73, 0x4b, 0x69, 0x74, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_io_member_program_proto_rawDescOnce sync.Once
	file_io_member_program_proto_rawDescData []byte
)

func file_io_member_program_proto_rawDescGZIP() []byte {
	file_io_member_program_proto_rawDescOnce.Do(func() {
		file_io_member_program_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_member_program_proto_rawDesc), len(file_io_member_program_proto_rawDesc)))
	})
	return file_io_member_program_proto_rawDescData
}

var file_io_member_program_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_io_member_program_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_io_member_program_proto_goTypes = []any{
	(ProgramAutoUpDownGradeTierType)(0), // 0: members.ProgramAutoUpDownGradeTierType
	(BalanceType)(0),                    // 1: members.BalanceType
	(ProfileImageSetting)(0),            // 2: members.ProfileImageSetting
	(RecoverPassDelivery)(0),            // 3: members.RecoverPassDelivery
	(*PointsType)(nil),                  // 4: members.PointsType
	(*Program)(nil),                     // 5: members.Program
	(*EventCaptureSettings)(nil),        // 6: members.EventCaptureSettings
	(*ProgramCopyRequest)(nil),          // 7: members.ProgramCopyRequest
	(*ListProgramsResponse)(nil),        // 8: members.ListProgramsResponse
	(*GetMetaKeysResponse)(nil),         // 9: members.GetMetaKeysResponse
	(*CustomExternalId)(nil),            // 10: members.CustomExternalId
	(*PassRecoverySettings)(nil),        // 11: members.PassRecoverySettings
	nil,                                 // 12: members.EventCaptureSettings.EventDataRetentionSettingsEntry
	(*io.LocalizedString)(nil),          // 13: io.LocalizedString
	(io.ProjectStatus)(0),               // 14: io.ProjectStatus
	(*io.Quota)(nil),                    // 15: io.Quota
	(*io.DistributionSettings)(nil),     // 16: io.DistributionSettings
	(*io.Metrics)(nil),                  // 17: io.Metrics
	(*timestamppb.Timestamp)(nil),       // 18: google.protobuf.Timestamp
}
var file_io_member_program_proto_depIdxs = []int32{
	1,  // 0: members.PointsType.balanceType:type_name -> members.BalanceType
	13, // 1: members.Program.localizedName:type_name -> io.LocalizedString
	14, // 2: members.Program.status:type_name -> io.ProjectStatus
	15, // 3: members.Program.quota:type_name -> io.Quota
	16, // 4: members.Program.distributionSettings:type_name -> io.DistributionSettings
	13, // 5: members.Program.localizedExpiryMessage:type_name -> io.LocalizedString
	4,  // 6: members.Program.pointsType:type_name -> members.PointsType
	4,  // 7: members.Program.secondaryPointsType:type_name -> members.PointsType
	17, // 8: members.Program.metrics:type_name -> io.Metrics
	18, // 9: members.Program.created:type_name -> google.protobuf.Timestamp
	18, // 10: members.Program.updated:type_name -> google.protobuf.Timestamp
	2,  // 11: members.Program.profileImageSettings:type_name -> members.ProfileImageSetting
	10, // 12: members.Program.applyFieldToExternalIdOnEnrol:type_name -> members.CustomExternalId
	6,  // 13: members.Program.eventCaptureSettings:type_name -> members.EventCaptureSettings
	11, // 14: members.Program.passRecoverySettings:type_name -> members.PassRecoverySettings
	12, // 15: members.EventCaptureSettings.eventDataRetentionSettings:type_name -> members.EventCaptureSettings.EventDataRetentionSettingsEntry
	14, // 16: members.ProgramCopyRequest.status:type_name -> io.ProjectStatus
	5,  // 17: members.ListProgramsResponse.programs:type_name -> members.Program
	3,  // 18: members.PassRecoverySettings.delivery:type_name -> members.RecoverPassDelivery
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_io_member_program_proto_init() }
func file_io_member_program_proto_init() {
	if File_io_member_program_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_member_program_proto_rawDesc), len(file_io_member_program_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_member_program_proto_goTypes,
		DependencyIndexes: file_io_member_program_proto_depIdxs,
		EnumInfos:         file_io_member_program_proto_enumTypes,
		MessageInfos:      file_io_member_program_proto_msgTypes,
	}.Build()
	File_io_member_program_proto = out.File
	file_io_member_program_proto_goTypes = nil
	file_io_member_program_proto_depIdxs = nil
}
